/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/tetris.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/mainloop.js/build/mainloop.min.js":
/*!********************************************************!*\
  !*** ./node_modules/mainloop.js/build/mainloop.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * mainloop.js 1.0.3-20170529\n *\n * @author Isaac Sukin (http://www.isaacsukin.com/)\n * @license MIT\n */\n\n!function(a){function b(a){if(x=q(b),!(a<e+l)){for(d+=a-e,e=a,t(a,d),a>i+h&&(f=g*j*1e3/(a-i)+(1-g)*f,i=a,j=0),j++,k=0;d>=c;)if(u(c),d-=c,++k>=240){o=!0;break}v(d/c),w(f,o),o=!1}}var c=1e3/60,d=0,e=0,f=60,g=.9,h=1e3,i=0,j=0,k=0,l=0,m=!1,n=!1,o=!1,p=\"object\"==typeof window?window:a,q=p.requestAnimationFrame||function(){var a=Date.now(),b,d;return function(e){return b=Date.now(),d=Math.max(0,c-(b-a)),a=b+d,setTimeout(function(){e(b+d)},d)}}(),r=p.cancelAnimationFrame||clearTimeout,s=function(){},t=s,u=s,v=s,w=s,x;a.MainLoop={getSimulationTimestep:function(){return c},setSimulationTimestep:function(a){return c=a,this},getFPS:function(){return f},getMaxAllowedFPS:function(){return 1e3/l},setMaxAllowedFPS:function(a){return\"undefined\"==typeof a&&(a=1/0),0===a?this.stop():l=1e3/a,this},resetFrameDelta:function(){var a=d;return d=0,a},setBegin:function(a){return t=a||t,this},setUpdate:function(a){return u=a||u,this},setDraw:function(a){return v=a||v,this},setEnd:function(a){return w=a||w,this},start:function(){return n||(n=!0,x=q(function(a){v(1),m=!0,e=a,i=a,j=0,x=q(b)})),this},stop:function(){return m=!1,n=!1,r(x),this},isRunning:function(){return m}}, true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (a.MainLoop),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(this);\n//# sourceMappingURL=mainloop.min.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWFpbmxvb3AuanMvYnVpbGQvbWFpbmxvb3AubWluLmpzPzQzYTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsY0FBYyxvQkFBb0IsdUVBQXVFLEtBQUssd0JBQXdCLEtBQUssTUFBTSxvQkFBb0IsNklBQTZJLHFCQUFxQixtQkFBbUIsc0VBQXNFLE9BQU8sS0FBSyx3REFBd0QsbUJBQW1CLFlBQVksaUNBQWlDLFNBQVMsbUNBQW1DLGdCQUFnQixtQkFBbUIsU0FBUyw2QkFBNkIsYUFBYSw4QkFBOEIsb0VBQW9FLDRCQUE0QixRQUFRLGFBQWEsc0JBQXNCLG1CQUFtQix1QkFBdUIsbUJBQW1CLHFCQUFxQixtQkFBbUIsb0JBQW9CLG1CQUFtQixrQkFBa0IsZ0NBQWdDLDZCQUE2QixRQUFRLGlCQUFpQiwyQkFBMkIsc0JBQXNCLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQSwrR0FBK0o7QUFDMXlDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL21haW5sb29wLmpzL2J1aWxkL21haW5sb29wLm1pbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbWFpbmxvb3AuanMgMS4wLjMtMjAxNzA1MjlcbiAqXG4gKiBAYXV0aG9yIElzYWFjIFN1a2luIChodHRwOi8vd3d3LmlzYWFjc3VraW4uY29tLylcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5cbiFmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe2lmKHg9cShiKSwhKGE8ZStsKSl7Zm9yKGQrPWEtZSxlPWEsdChhLGQpLGE+aStoJiYoZj1nKmoqMWUzLyhhLWkpKygxLWcpKmYsaT1hLGo9MCksaisrLGs9MDtkPj1jOylpZih1KGMpLGQtPWMsKytrPj0yNDApe289ITA7YnJlYWt9dihkL2MpLHcoZixvKSxvPSExfX12YXIgYz0xZTMvNjAsZD0wLGU9MCxmPTYwLGc9LjksaD0xZTMsaT0wLGo9MCxrPTAsbD0wLG09ITEsbj0hMSxvPSExLHA9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdz93aW5kb3c6YSxxPXAucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbigpe3ZhciBhPURhdGUubm93KCksYixkO3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gYj1EYXRlLm5vdygpLGQ9TWF0aC5tYXgoMCxjLShiLWEpKSxhPWIrZCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShiK2QpfSxkKX19KCkscj1wLmNhbmNlbEFuaW1hdGlvbkZyYW1lfHxjbGVhclRpbWVvdXQscz1mdW5jdGlvbigpe30sdD1zLHU9cyx2PXMsdz1zLHg7YS5NYWluTG9vcD17Z2V0U2ltdWxhdGlvblRpbWVzdGVwOmZ1bmN0aW9uKCl7cmV0dXJuIGN9LHNldFNpbXVsYXRpb25UaW1lc3RlcDpmdW5jdGlvbihhKXtyZXR1cm4gYz1hLHRoaXN9LGdldEZQUzpmdW5jdGlvbigpe3JldHVybiBmfSxnZXRNYXhBbGxvd2VkRlBTOmZ1bmN0aW9uKCl7cmV0dXJuIDFlMy9sfSxzZXRNYXhBbGxvd2VkRlBTOmZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBhJiYoYT0xLzApLDA9PT1hP3RoaXMuc3RvcCgpOmw9MWUzL2EsdGhpc30scmVzZXRGcmFtZURlbHRhOmZ1bmN0aW9uKCl7dmFyIGE9ZDtyZXR1cm4gZD0wLGF9LHNldEJlZ2luOmZ1bmN0aW9uKGEpe3JldHVybiB0PWF8fHQsdGhpc30sc2V0VXBkYXRlOmZ1bmN0aW9uKGEpe3JldHVybiB1PWF8fHUsdGhpc30sc2V0RHJhdzpmdW5jdGlvbihhKXtyZXR1cm4gdj1hfHx2LHRoaXN9LHNldEVuZDpmdW5jdGlvbihhKXtyZXR1cm4gdz1hfHx3LHRoaXN9LHN0YXJ0OmZ1bmN0aW9uKCl7cmV0dXJuIG58fChuPSEwLHg9cShmdW5jdGlvbihhKXt2KDEpLG09ITAsZT1hLGk9YSxqPTAseD1xKGIpfSkpLHRoaXN9LHN0b3A6ZnVuY3Rpb24oKXtyZXR1cm4gbT0hMSxuPSExLHIoeCksdGhpc30saXNSdW5uaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIG19fSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGEuTWFpbkxvb3ApOlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUmJm51bGwhPT1tb2R1bGUmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUuZXhwb3J0cyYmKG1vZHVsZS5leHBvcnRzPWEuTWFpbkxvb3ApfSh0aGlzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1haW5sb29wLm1pbi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mainloop.js/build/mainloop.min.js\n");

/***/ }),

/***/ "./node_modules/random-js/lib/random.js":
/*!**********************************************!*\
  !*** ./node_modules/random-js/lib/random.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return Random;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/random-js/lib/random.js\n");

/***/ }),

/***/ "./src/audio.ts":
/*!**********************!*\
  !*** ./src/audio.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet audioPlaying = false;\nconst music = new Audio(\"audio/music/tetris.mp3\");\nmusic.loop = true;\nconst rotate = new Audio(\"audio/sfx/rotate.wav\");\nfunction playAudio() {\n    audioPlaying = true;\n    music.play();\n    const soundOn = document.getElementById(\"sound-on\");\n    if (soundOn) {\n        soundOn.style.display = \"none\";\n    }\n    const soundOff = document.getElementById(\"sound-off\");\n    if (soundOff) {\n        soundOff.style.display = \"block\";\n    }\n}\nexports.playAudio = playAudio;\nfunction stopAudio() {\n    audioPlaying = false;\n    music.pause();\n    const soundOn = document.getElementById(\"sound-on\");\n    if (soundOn) {\n        soundOn.style.display = \"block\";\n    }\n    const soundOff = document.getElementById(\"sound-off\");\n    if (soundOff) {\n        soundOff.style.display = \"none\";\n    }\n}\nexports.stopAudio = stopAudio;\nfunction playRotate() {\n    if (audioPlaying) {\n        rotate.play();\n    }\n}\nexports.playRotate = playRotate;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYXVkaW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLFlBQVksR0FBRyxLQUFLLENBQUM7QUFDekIsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUNsRCxLQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUVsQixNQUFNLE1BQU0sR0FBRyxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBRWpEO0lBQ0UsWUFBWSxHQUFHLElBQUksQ0FBQztJQUNwQixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDYixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BELElBQUksT0FBTyxFQUFFO1FBQ1gsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0tBQ2hDO0lBQ0QsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN0RCxJQUFJLFFBQVEsRUFBRTtRQUNaLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztLQUNsQztBQUNILENBQUM7QUFYRCw4QkFXQztBQUVEO0lBQ0UsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUNyQixLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZCxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BELElBQUksT0FBTyxFQUFFO1FBQ1gsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0tBQ2pDO0lBQ0QsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN0RCxJQUFJLFFBQVEsRUFBRTtRQUNaLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztLQUNqQztBQUNILENBQUM7QUFYRCw4QkFXQztBQUVEO0lBQ0UsSUFBSSxZQUFZLEVBQUU7UUFDaEIsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0tBQ2Y7QUFDSCxDQUFDO0FBSkQsZ0NBSUMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYXVkaW9QbGF5aW5nID0gZmFsc2U7XG5jb25zdCBtdXNpYyA9IG5ldyBBdWRpbyhcImF1ZGlvL211c2ljL3RldHJpcy5tcDNcIik7XG5tdXNpYy5sb29wID0gdHJ1ZTtcblxuY29uc3Qgcm90YXRlID0gbmV3IEF1ZGlvKFwiYXVkaW8vc2Z4L3JvdGF0ZS53YXZcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiBwbGF5QXVkaW8oKSB7XG4gIGF1ZGlvUGxheWluZyA9IHRydWU7XG4gIG11c2ljLnBsYXkoKTtcbiAgY29uc3Qgc291bmRPbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic291bmQtb25cIik7XG4gIGlmIChzb3VuZE9uKSB7XG4gICAgc291bmRPbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH1cbiAgY29uc3Qgc291bmRPZmYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvdW5kLW9mZlwiKTtcbiAgaWYgKHNvdW5kT2ZmKSB7XG4gICAgc291bmRPZmYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcEF1ZGlvKCkge1xuICBhdWRpb1BsYXlpbmcgPSBmYWxzZTtcbiAgbXVzaWMucGF1c2UoKTtcbiAgY29uc3Qgc291bmRPbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic291bmQtb25cIik7XG4gIGlmIChzb3VuZE9uKSB7XG4gICAgc291bmRPbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICB9XG4gIGNvbnN0IHNvdW5kT2ZmID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb3VuZC1vZmZcIik7XG4gIGlmIChzb3VuZE9mZikge1xuICAgIHNvdW5kT2ZmLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGxheVJvdGF0ZSgpIHtcbiAgaWYgKGF1ZGlvUGxheWluZykge1xuICAgIHJvdGF0ZS5wbGF5KCk7XG4gIH1cbn1cbiJdfQ==\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXVkaW8udHM/NmNiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyIsImZpbGUiOiIuL3NyYy9hdWRpby50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xubGV0IGF1ZGlvUGxheWluZyA9IGZhbHNlO1xuY29uc3QgbXVzaWMgPSBuZXcgQXVkaW8oXCJhdWRpby9tdXNpYy90ZXRyaXMubXAzXCIpO1xubXVzaWMubG9vcCA9IHRydWU7XG5jb25zdCByb3RhdGUgPSBuZXcgQXVkaW8oXCJhdWRpby9zZngvcm90YXRlLndhdlwiKTtcbmZ1bmN0aW9uIHBsYXlBdWRpbygpIHtcbiAgICBhdWRpb1BsYXlpbmcgPSB0cnVlO1xuICAgIG11c2ljLnBsYXkoKTtcbiAgICBjb25zdCBzb3VuZE9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb3VuZC1vblwiKTtcbiAgICBpZiAoc291bmRPbikge1xuICAgICAgICBzb3VuZE9uLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG4gICAgY29uc3Qgc291bmRPZmYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvdW5kLW9mZlwiKTtcbiAgICBpZiAoc291bmRPZmYpIHtcbiAgICAgICAgc291bmRPZmYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICB9XG59XG5leHBvcnRzLnBsYXlBdWRpbyA9IHBsYXlBdWRpbztcbmZ1bmN0aW9uIHN0b3BBdWRpbygpIHtcbiAgICBhdWRpb1BsYXlpbmcgPSBmYWxzZTtcbiAgICBtdXNpYy5wYXVzZSgpO1xuICAgIGNvbnN0IHNvdW5kT24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvdW5kLW9uXCIpO1xuICAgIGlmIChzb3VuZE9uKSB7XG4gICAgICAgIHNvdW5kT24uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICB9XG4gICAgY29uc3Qgc291bmRPZmYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvdW5kLW9mZlwiKTtcbiAgICBpZiAoc291bmRPZmYpIHtcbiAgICAgICAgc291bmRPZmYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbn1cbmV4cG9ydHMuc3RvcEF1ZGlvID0gc3RvcEF1ZGlvO1xuZnVuY3Rpb24gcGxheVJvdGF0ZSgpIHtcbiAgICBpZiAoYXVkaW9QbGF5aW5nKSB7XG4gICAgICAgIHJvdGF0ZS5wbGF5KCk7XG4gICAgfVxufVxuZXhwb3J0cy5wbGF5Um90YXRlID0gcGxheVJvdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVlYVmthVzh1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTl6Y21NdllYVmthVzh1ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN1FVRkJRU3hKUVVGSkxGbEJRVmtzUjBGQlJ5eExRVUZMTEVOQlFVTTdRVUZEZWtJc1RVRkJUU3hMUVVGTExFZEJRVWNzU1VGQlNTeExRVUZMTEVOQlFVTXNkMEpCUVhkQ0xFTkJRVU1zUTBGQlF6dEJRVU5zUkN4TFFVRkxMRU5CUVVNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF6dEJRVVZzUWl4TlFVRk5MRTFCUVUwc1IwRkJSeXhKUVVGSkxFdEJRVXNzUTBGQlF5eHpRa0ZCYzBJc1EwRkJReXhEUVVGRE8wRkJSV3BFTzBsQlEwVXNXVUZCV1N4SFFVRkhMRWxCUVVrc1EwRkJRenRKUVVOd1FpeExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1NVRkRZaXhOUVVGTkxFOUJRVThzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZMEZCWXl4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8wbEJRM0JFTEVsQlFVa3NUMEZCVHl4RlFVRkZPMUZCUTFnc1QwRkJUeXhEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVkQlFVY3NUVUZCVFN4RFFVRkRPMHRCUTJoRE8wbEJRMFFzVFVGQlRTeFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF6dEpRVU4wUkN4SlFVRkpMRkZCUVZFc1JVRkJSVHRSUVVOYUxGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJRenRMUVVOc1F6dEJRVU5JTEVOQlFVTTdRVUZZUkN3NFFrRlhRenRCUVVWRU8wbEJRMFVzV1VGQldTeEhRVUZITEV0QlFVc3NRMEZCUXp0SlFVTnlRaXhMUVVGTExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTTdTVUZEWkN4TlFVRk5MRTlCUVU4c1IwRkJSeXhSUVVGUkxFTkJRVU1zWTBGQll5eERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMGxCUTNCRUxFbEJRVWtzVDBGQlR5eEZRVUZGTzFGQlExZ3NUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzB0QlEycERPMGxCUTBRc1RVRkJUU3hSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETEdOQlFXTXNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJRenRKUVVOMFJDeEpRVUZKTEZGQlFWRXNSVUZCUlR0UlFVTmFMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eEhRVUZITEUxQlFVMHNRMEZCUXp0TFFVTnFRenRCUVVOSUxFTkJRVU03UVVGWVJDdzRRa0ZYUXp0QlFVVkVPMGxCUTBVc1NVRkJTU3haUVVGWkxFVkJRVVU3VVVGRGFFSXNUVUZCVFN4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8wdEJRMlk3UVVGRFNDeERRVUZETzBGQlNrUXNaME5CU1VNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnNaWFFnWVhWa2FXOVFiR0Y1YVc1bklEMGdabUZzYzJVN1hHNWpiMjV6ZENCdGRYTnBZeUE5SUc1bGR5QkJkV1JwYnloY0ltRjFaR2x2TDIxMWMybGpMM1JsZEhKcGN5NXRjRE5jSWlrN1hHNXRkWE5wWXk1c2IyOXdJRDBnZEhKMVpUdGNibHh1WTI5dWMzUWdjbTkwWVhSbElEMGdibVYzSUVGMVpHbHZLRndpWVhWa2FXOHZjMlo0TDNKdmRHRjBaUzUzWVhaY0lpazdYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ3YkdGNVFYVmthVzhvS1NCN1hHNGdJR0YxWkdsdlVHeGhlV2x1WnlBOUlIUnlkV1U3WEc0Z0lHMTFjMmxqTG5Cc1lYa29LVHRjYmlBZ1kyOXVjM1FnYzI5MWJtUlBiaUE5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLRndpYzI5MWJtUXRiMjVjSWlrN1hHNGdJR2xtSUNoemIzVnVaRTl1S1NCN1hHNGdJQ0FnYzI5MWJtUlBiaTV6ZEhsc1pTNWthWE53YkdGNUlEMGdYQ0p1YjI1bFhDSTdYRzRnSUgxY2JpQWdZMjl1YzNRZ2MyOTFibVJQWm1ZZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNoY0luTnZkVzVrTFc5bVpsd2lLVHRjYmlBZ2FXWWdLSE52ZFc1a1QyWm1LU0I3WEc0Z0lDQWdjMjkxYm1SUFptWXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlGd2lZbXh2WTJ0Y0lqdGNiaUFnZlZ4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjM1J2Y0VGMVpHbHZLQ2tnZTF4dUlDQmhkV1JwYjFCc1lYbHBibWNnUFNCbVlXeHpaVHRjYmlBZ2JYVnphV011Y0dGMWMyVW9LVHRjYmlBZ1kyOXVjM1FnYzI5MWJtUlBiaUE5SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLRndpYzI5MWJtUXRiMjVjSWlrN1hHNGdJR2xtSUNoemIzVnVaRTl1S1NCN1hHNGdJQ0FnYzI5MWJtUlBiaTV6ZEhsc1pTNWthWE53YkdGNUlEMGdYQ0ppYkc5amExd2lPMXh1SUNCOVhHNGdJR052Ym5OMElITnZkVzVrVDJabUlEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb1hDSnpiM1Z1WkMxdlptWmNJaWs3WEc0Z0lHbG1JQ2h6YjNWdVpFOW1aaWtnZTF4dUlDQWdJSE52ZFc1a1QyWm1Mbk4wZVd4bExtUnBjM0JzWVhrZ1BTQmNJbTV2Ym1WY0lqdGNiaUFnZlZ4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjR3hoZVZKdmRHRjBaU2dwSUh0Y2JpQWdhV1lnS0dGMVpHbHZVR3hoZVdsdVp5a2dlMXh1SUNBZ0lISnZkR0YwWlM1d2JHRjVLQ2s3WEc0Z0lIMWNibjFjYmlKZGZRPT0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/audio.ts\n");

/***/ }),

/***/ "./src/canvas.ts":
/*!***********************!*\
  !*** ./src/canvas.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction canvasCtor() {\n    let canvas = undefined;\n    let ctx = undefined;\n    canvas = document.getElementById(\"canvas\");\n    if (!canvas) {\n        throw new Error(\"canvas wtf?\");\n    }\n    ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n        throw new Error(\"ctx wtf?\");\n    }\n    return {\n        ctx,\n        canvas,\n    };\n}\nexports.canvasCtor = canvasCtor;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FudmFzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NhbnZhcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0lBQ0UsSUFBSSxNQUFNLEdBQVEsU0FBUyxDQUFDO0lBQzVCLElBQUksR0FBRyxHQUFRLFNBQVMsQ0FBQztJQUV6QixNQUFNLEdBQXVCLFFBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0QsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNYLE1BQU0sSUFBSSxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDaEM7SUFFRCxHQUFHLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUM3QjtJQUVELE9BQU87UUFDTCxHQUFHO1FBQ0gsTUFBTTtLQUNQLENBQUE7QUFDSCxDQUFDO0FBbEJELGdDQWtCQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjYW52YXNDdG9yKCkge1xuICBsZXQgY2FudmFzOiBhbnkgPSB1bmRlZmluZWQ7XG4gIGxldCBjdHg6IGFueSA9IHVuZGVmaW5lZDtcblxuICBjYW52YXMgPSA8SFRNTENhbnZhc0VsZW1lbnQ+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xuICBpZiAoIWNhbnZhcykge1xuICAgIHRocm93IG5ldyBFcnJvcihcImNhbnZhcyB3dGY/XCIpO1xuICB9XG5cbiAgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgaWYgKCFjdHgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjdHggd3RmP1wiKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgY3R4LFxuICAgIGNhbnZhcyxcbiAgfVxufSJdfQ==\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2FudmFzLnRzP2UxZDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwiZmlsZSI6Ii4vc3JjL2NhbnZhcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gY2FudmFzQ3RvcigpIHtcbiAgICBsZXQgY2FudmFzID0gdW5kZWZpbmVkO1xuICAgIGxldCBjdHggPSB1bmRlZmluZWQ7XG4gICAgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XG4gICAgaWYgKCFjYW52YXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2FudmFzIHd0Zj9cIik7XG4gICAgfVxuICAgIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgaWYgKCFjdHgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY3R4IHd0Zj9cIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGN0eCxcbiAgICAgICAgY2FudmFzLFxuICAgIH07XG59XG5leHBvcnRzLmNhbnZhc0N0b3IgPSBjYW52YXNDdG9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTJGdWRtRnpMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZjM0pqTDJOaGJuWmhjeTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3p0QlFVRkJPMGxCUTBVc1NVRkJTU3hOUVVGTkxFZEJRVkVzVTBGQlV5eERRVUZETzBsQlF6VkNMRWxCUVVrc1IwRkJSeXhIUVVGUkxGTkJRVk1zUTBGQlF6dEpRVVY2UWl4TlFVRk5MRWRCUVhWQ0xGRkJRVkVzUTBGQlF5eGpRVUZqTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNN1NVRkRMMFFzU1VGQlNTeERRVUZETEUxQlFVMHNSVUZCUlR0UlFVTllMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTTdTMEZEYUVNN1NVRkZSQ3hIUVVGSExFZEJRVWNzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRKUVVNNVFpeEpRVUZKTEVOQlFVTXNSMEZCUnl4RlFVRkZPMUZCUTFJc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXp0TFFVTTNRanRKUVVWRUxFOUJRVTg3VVVGRFRDeEhRVUZITzFGQlEwZ3NUVUZCVFR0TFFVTlFMRU5CUVVFN1FVRkRTQ3hEUVVGRE8wRkJiRUpFTEdkRFFXdENReUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqWVc1MllYTkRkRzl5S0NrZ2UxeHVJQ0JzWlhRZ1kyRnVkbUZ6T2lCaGJua2dQU0IxYm1SbFptbHVaV1E3WEc0Z0lHeGxkQ0JqZEhnNklHRnVlU0E5SUhWdVpHVm1hVzVsWkR0Y2JseHVJQ0JqWVc1MllYTWdQU0E4U0ZSTlRFTmhiblpoYzBWc1pXMWxiblErSUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLRndpWTJGdWRtRnpYQ0lwTzF4dUlDQnBaaUFvSVdOaGJuWmhjeWtnZTF4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGNJbU5oYm5aaGN5QjNkR1kvWENJcE8xeHVJQ0I5WEc1Y2JpQWdZM1I0SUQwZ1kyRnVkbUZ6TG1kbGRFTnZiblJsZUhRb1hDSXlaRndpS1R0Y2JpQWdhV1lnS0NGamRIZ3BJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1hDSmpkSGdnZDNSbVAxd2lLVHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdZM1I0TEZ4dUlDQWdJR05oYm5aaGN5eGNiaUFnZlZ4dWZTSmRmUT09Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/canvas.ts\n");

/***/ }),

/***/ "./src/choose_color.ts":
/*!*****************************!*\
  !*** ./src/choose_color.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Random = __webpack_require__(/*! random-js */ \"./node_modules/random-js/lib/random.js\");\nconst color_list_1 = __webpack_require__(/*! ./color_list */ \"./src/color_list.ts\");\nfunction chooseColor() {\n    let random = new Random(Random.engines.mt19937().autoSeed());\n    // -1 is to allow for range in 0 based Array\n    return color_list_1.colorList[random.integer(1, color_list_1.colorList.length) - 1];\n}\nexports.chooseColor = chooseColor;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hvb3NlX2NvbG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Nob29zZV9jb2xvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG9DQUFvQztBQUNwQyw2Q0FBdUM7QUFFdkM7SUFDRSxJQUFJLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDN0QsNENBQTRDO0lBQzVDLE9BQU8sc0JBQVMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxzQkFBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQzVELENBQUM7QUFKRCxrQ0FJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJhbmRvbSBmcm9tIFwicmFuZG9tLWpzXCI7XG5pbXBvcnQge2NvbG9yTGlzdH0gZnJvbSBcIi4vY29sb3JfbGlzdFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY2hvb3NlQ29sb3IoKSB7XG4gIGxldCByYW5kb20gPSBuZXcgUmFuZG9tKFJhbmRvbS5lbmdpbmVzLm10MTk5MzcoKS5hdXRvU2VlZCgpKTtcbiAgLy8gLTEgaXMgdG8gYWxsb3cgZm9yIHJhbmdlIGluIDAgYmFzZWQgQXJyYXlcbiAgcmV0dXJuIGNvbG9yTGlzdFtyYW5kb20uaW50ZWdlcigxLCBjb2xvckxpc3QubGVuZ3RoKSAtIDFdO1xufSJdfQ==\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hvb3NlX2NvbG9yLnRzP2I0NDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwiZmlsZSI6Ii4vc3JjL2Nob29zZV9jb2xvci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmFuZG9tID0gcmVxdWlyZShcInJhbmRvbS1qc1wiKTtcbmNvbnN0IGNvbG9yX2xpc3RfMSA9IHJlcXVpcmUoXCIuL2NvbG9yX2xpc3RcIik7XG5mdW5jdGlvbiBjaG9vc2VDb2xvcigpIHtcbiAgICBsZXQgcmFuZG9tID0gbmV3IFJhbmRvbShSYW5kb20uZW5naW5lcy5tdDE5OTM3KCkuYXV0b1NlZWQoKSk7XG4gICAgLy8gLTEgaXMgdG8gYWxsb3cgZm9yIHJhbmdlIGluIDAgYmFzZWQgQXJyYXlcbiAgICByZXR1cm4gY29sb3JfbGlzdF8xLmNvbG9yTGlzdFtyYW5kb20uaW50ZWdlcigxLCBjb2xvcl9saXN0XzEuY29sb3JMaXN0Lmxlbmd0aCkgLSAxXTtcbn1cbmV4cG9ydHMuY2hvb3NlQ29sb3IgPSBjaG9vc2VDb2xvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVkyaHZiM05sWDJOdmJHOXlMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE1pT2xzaUxpNHZjM0pqTDJOb2IyOXpaVjlqYjJ4dmNpNTBjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenRCUVVGQkxHOURRVUZ2UXp0QlFVTndReXcyUTBGQmRVTTdRVUZGZGtNN1NVRkRSU3hKUVVGSkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFOUJRVThzUlVGQlJTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRMRU5CUVVNN1NVRkROMFFzTkVOQlFUUkRPMGxCUXpWRExFOUJRVThzYzBKQlFWTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUlVGQlJTeHpRa0ZCVXl4RFFVRkRMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlF6VkVMRU5CUVVNN1FVRktSQ3hyUTBGSlF5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQXFJR0Z6SUZKaGJtUnZiU0JtY205dElGd2ljbUZ1Wkc5dExXcHpYQ0k3WEc1cGJYQnZjblFnZTJOdmJHOXlUR2x6ZEgwZ1puSnZiU0JjSWk0dlkyOXNiM0pmYkdsemRGd2lPMXh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTJodmIzTmxRMjlzYjNJb0tTQjdYRzRnSUd4bGRDQnlZVzVrYjIwZ1BTQnVaWGNnVW1GdVpHOXRLRkpoYm1SdmJTNWxibWRwYm1WekxtMTBNVGs1TXpjb0tTNWhkWFJ2VTJWbFpDZ3BLVHRjYmlBZ0x5OGdMVEVnYVhNZ2RHOGdZV3hzYjNjZ1ptOXlJSEpoYm1kbElHbHVJREFnWW1GelpXUWdRWEp5WVhsY2JpQWdjbVYwZFhKdUlHTnZiRzl5VEdsemRGdHlZVzVrYjIwdWFXNTBaV2RsY2lneExDQmpiMnh2Y2t4cGMzUXViR1Z1WjNSb0tTQXRJREZkTzF4dWZTSmRmUT09Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/choose_color.ts\n");

/***/ }),

/***/ "./src/clear_lines.ts":
/*!****************************!*\
  !*** ./src/clear_lines.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction clearLinesCtor() {\n    function clearLine(tetrisWell, row) {\n        for (let i = row; i < tetrisWell.length - 1; ++i) {\n            for (let j = 1; j < tetrisWell[i].length - 1; ++j) {\n                tetrisWell[i][j] = tetrisWell[i + 1][j];\n            }\n        }\n    }\n    function execute(tetrisWell) {\n        console.log(\"clearlines\");\n        for (let i = tetrisWell.length - 2; i > 0; --i) {\n            const slice = tetrisWell[i]\n                .slice(1, tetrisWell[i].length - 1);\n            const complete = slice\n                .every(x => x > 0);\n            if (complete) {\n                clearLine(tetrisWell, i);\n            }\n        }\n    }\n    return {\n        execute,\n    };\n}\nexports.clearLinesCtor = clearLinesCtor;\nexports.clearLines = clearLinesCtor().execute;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXJfbGluZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY2xlYXJfbGluZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUNFLG1CQUFtQixVQUFVLEVBQUUsR0FBRztRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDaEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO2dCQUNqRCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN6QztTQUNGO0lBQ0gsQ0FBQztJQUVELGlCQUFpQixVQUFVO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUIsS0FBSyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQzlDLE1BQU0sS0FBSyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7aUJBQ3hCLEtBQUssQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN0QyxNQUFNLFFBQVEsR0FBRyxLQUFLO2lCQUNuQixLQUFLLENBQ0osQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFFaEIsSUFBSSxRQUFRLEVBQUU7Z0JBQ1osU0FBUyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUMxQjtTQUNGO0lBQ0gsQ0FBQztJQUVELE9BQU87UUFDTCxPQUFPO0tBQ1IsQ0FBQztBQUNKLENBQUM7QUEzQkQsd0NBMkJDO0FBRVksUUFBQSxVQUFVLEdBQUcsY0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnYW1lU3RhdGV9IGZyb20gXCIuL2dsb2JhbHNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyTGluZXNDdG9yKCkge1xuICBmdW5jdGlvbiBjbGVhckxpbmUodGV0cmlzV2VsbCwgcm93KSB7XG4gICAgZm9yIChsZXQgaSA9IHJvdzsgaSA8IHRldHJpc1dlbGwubGVuZ3RoIC0gMTsgKytpKSB7XG4gICAgICBmb3IgKGxldCBqID0gMTsgaiA8IHRldHJpc1dlbGxbaV0ubGVuZ3RoIC0gMTsgKytqKSB7XG4gICAgICAgIHRldHJpc1dlbGxbaV1bal0gPSB0ZXRyaXNXZWxsW2kgKyAxXVtqXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBleGVjdXRlKHRldHJpc1dlbGwpIHtcbiAgICBjb25zb2xlLmxvZyhcImNsZWFybGluZXNcIik7XG4gICAgZm9yIChsZXQgaSA9IHRldHJpc1dlbGwubGVuZ3RoIC0gMjsgaSA+IDA7IC0taSkge1xuICAgICAgY29uc3Qgc2xpY2UgPSB0ZXRyaXNXZWxsW2ldXG4gICAgICAgIC5zbGljZSgxLCB0ZXRyaXNXZWxsW2ldLmxlbmd0aCAtIDEpO1xuICAgICAgY29uc3QgY29tcGxldGUgPSBzbGljZVxuICAgICAgICAuZXZlcnkoXG4gICAgICAgICAgeCA9PiB4ID4gMCk7XG5cbiAgICAgIGlmIChjb21wbGV0ZSkge1xuICAgICAgICBjbGVhckxpbmUodGV0cmlzV2VsbCwgaSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleGVjdXRlLFxuICB9O1xufVxuXG5leHBvcnQgY29uc3QgY2xlYXJMaW5lcyA9IGNsZWFyTGluZXNDdG9yKCkuZXhlY3V0ZTtcbiJdfQ==\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2xlYXJfbGluZXMudHM/MTFjMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQSx5QkFBeUIsMkJBQTJCO0FBQ3BELDJCQUEyQiw4QkFBOEI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE9BQU87QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwiZmlsZSI6Ii4vc3JjL2NsZWFyX2xpbmVzLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBjbGVhckxpbmVzQ3RvcigpIHtcbiAgICBmdW5jdGlvbiBjbGVhckxpbmUodGV0cmlzV2VsbCwgcm93KSB7XG4gICAgICAgIGZvciAobGV0IGkgPSByb3c7IGkgPCB0ZXRyaXNXZWxsLmxlbmd0aCAtIDE7ICsraSkge1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPCB0ZXRyaXNXZWxsW2ldLmxlbmd0aCAtIDE7ICsraikge1xuICAgICAgICAgICAgICAgIHRldHJpc1dlbGxbaV1bal0gPSB0ZXRyaXNXZWxsW2kgKyAxXVtqXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBleGVjdXRlKHRldHJpc1dlbGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJjbGVhcmxpbmVzXCIpO1xuICAgICAgICBmb3IgKGxldCBpID0gdGV0cmlzV2VsbC5sZW5ndGggLSAyOyBpID4gMDsgLS1pKSB7XG4gICAgICAgICAgICBjb25zdCBzbGljZSA9IHRldHJpc1dlbGxbaV1cbiAgICAgICAgICAgICAgICAuc2xpY2UoMSwgdGV0cmlzV2VsbFtpXS5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbXBsZXRlID0gc2xpY2VcbiAgICAgICAgICAgICAgICAuZXZlcnkoeCA9PiB4ID4gMCk7XG4gICAgICAgICAgICBpZiAoY29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBjbGVhckxpbmUodGV0cmlzV2VsbCwgaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZXhlY3V0ZSxcbiAgICB9O1xufVxuZXhwb3J0cy5jbGVhckxpbmVzQ3RvciA9IGNsZWFyTGluZXNDdG9yO1xuZXhwb3J0cy5jbGVhckxpbmVzID0gY2xlYXJMaW5lc0N0b3IoKS5leGVjdXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTJ4bFlYSmZiR2x1WlhNdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGN5STZXeUl1TGk5emNtTXZZMnhsWVhKZmJHbHVaWE11ZEhNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN1FVRkZRVHRKUVVORkxHMUNRVUZ0UWl4VlFVRlZMRVZCUVVVc1IwRkJSenRSUVVOb1F5eExRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRExFZEJRVWNzVlVGQlZTeERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVU3V1VGRGFFUXNTMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZPMmRDUVVOcVJDeFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzVlVGQlZTeERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dGhRVU42UXp0VFFVTkdPMGxCUTBnc1EwRkJRenRKUVVWRUxHbENRVUZwUWl4VlFVRlZPMUZCUTNwQ0xFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1VVRkRNVUlzUzBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4VlFVRlZMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRk8xbEJRemxETEUxQlFVMHNTMEZCU3l4SFFVRkhMRlZCUVZVc1EwRkJReXhEUVVGRExFTkJRVU03YVVKQlEzaENMRXRCUVVzc1EwRkJReXhEUVVGRExFVkJRVVVzVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU4wUXl4TlFVRk5MRkZCUVZFc1IwRkJSeXhMUVVGTE8ybENRVU51UWl4TFFVRkxMRU5CUTBvc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkZhRUlzU1VGQlNTeFJRVUZSTEVWQlFVVTdaMEpCUTFvc1UwRkJVeXhEUVVGRExGVkJRVlVzUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0aFFVTXhRanRUUVVOR08wbEJRMGdzUTBGQlF6dEpRVVZFTEU5QlFVODdVVUZEVEN4UFFVRlBPMHRCUTFJc1EwRkJRenRCUVVOS0xFTkJRVU03UVVFelFrUXNkME5CTWtKRE8wRkJSVmtzVVVGQlFTeFZRVUZWTEVkQlFVY3NZMEZCWXl4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGRElpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIdG5ZVzFsVTNSaGRHVjlJR1p5YjIwZ1hDSXVMMmRzYjJKaGJITmNJanRjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOc1pXRnlUR2x1WlhORGRHOXlLQ2tnZTF4dUlDQm1kVzVqZEdsdmJpQmpiR1ZoY2t4cGJtVW9kR1YwY21selYyVnNiQ3dnY205M0tTQjdYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJSEp2ZHpzZ2FTQThJSFJsZEhKcGMxZGxiR3d1YkdWdVozUm9JQzBnTVRzZ0t5dHBLU0I3WEc0Z0lDQWdJQ0JtYjNJZ0tHeGxkQ0JxSUQwZ01Uc2dhaUE4SUhSbGRISnBjMWRsYkd4YmFWMHViR1Z1WjNSb0lDMGdNVHNnS3l0cUtTQjdYRzRnSUNBZ0lDQWdJSFJsZEhKcGMxZGxiR3hiYVYxYmFsMGdQU0IwWlhSeWFYTlhaV3hzVzJrZ0t5QXhYVnRxWFR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCbWRXNWpkR2x2YmlCbGVHVmpkWFJsS0hSbGRISnBjMWRsYkd3cElIdGNiaUFnSUNCamIyNXpiMnhsTG14dlp5aGNJbU5zWldGeWJHbHVaWE5jSWlrN1hHNGdJQ0FnWm05eUlDaHNaWFFnYVNBOUlIUmxkSEpwYzFkbGJHd3ViR1Z1WjNSb0lDMGdNanNnYVNBK0lEQTdJQzB0YVNrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYzJ4cFkyVWdQU0IwWlhSeWFYTlhaV3hzVzJsZFhHNGdJQ0FnSUNBZ0lDNXpiR2xqWlNneExDQjBaWFJ5YVhOWFpXeHNXMmxkTG14bGJtZDBhQ0F0SURFcE8xeHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dGNHeGxkR1VnUFNCemJHbGpaVnh1SUNBZ0lDQWdJQ0F1WlhabGNua29YRzRnSUNBZ0lDQWdJQ0FnZUNBOVBpQjRJRDRnTUNrN1hHNWNiaUFnSUNBZ0lHbG1JQ2hqYjIxd2JHVjBaU2tnZTF4dUlDQWdJQ0FnSUNCamJHVmhja3hwYm1Vb2RHVjBjbWx6VjJWc2JDd2dhU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQmxlR1ZqZFhSbExGeHVJQ0I5TzF4dWZWeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1kyeGxZWEpNYVc1bGN5QTlJR05zWldGeVRHbHVaWE5EZEc5eUtDa3VaWGhsWTNWMFpUdGNiaUpkZlE9PSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/clear_lines.ts\n");

/***/ }),

/***/ "./src/collisions.ts":
/*!***************************!*\
  !*** ./src/collisions.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = __webpack_require__(/*! ./globals */ \"./src/globals.ts\");\nfunction considerMovingThatWay({ offsetW = 0, offsetH = 0, tetromino }) {\n    //console.log(tetromino);\n    for (let tH = 0; tH < tetromino.length; ++tH) {\n        for (let tW = 0; tW < tetromino[tH].length; ++tW) {\n            if (tetromino[tH][tW] === 0) {\n                continue;\n            }\n            let wellW = globals_1.gameState.droppingWidth + offsetW + tW + 1;\n            let wellH = globals_1.gameState.droppingHeight + offsetH + tH + 1;\n            if (wellH >= globals_1.gameState.tetrisWell.length) {\n                debugger;\n            }\n            //console.log(JSON.stringify({wellH, wellW, well: tetrisWell[wellH][wellW]}));\n            if (globals_1.gameState.tetrisWell[wellH][wellW] !== 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.considerMovingThatWay = considerMovingThatWay;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGlzaW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb2xsaXNpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQW9DO0FBRXBDLCtCQUFzQyxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsT0FBTyxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUU7SUFDM0UseUJBQXlCO0lBQ3pCLEtBQUssSUFBSSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFO1FBQzVDLEtBQUssSUFBSSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFO1lBQ2hELElBQUksU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDM0IsU0FBUzthQUNWO1lBQ0QsSUFBSSxLQUFLLEdBQUcsbUJBQVMsQ0FBQyxhQUFhLEdBQUcsT0FBTyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdkQsSUFBSSxLQUFLLEdBQUcsbUJBQVMsQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDeEQsSUFBSSxLQUFLLElBQUksbUJBQVMsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO2dCQUN4QyxRQUFRLENBQUM7YUFDVjtZQUNELDhFQUE4RTtZQUM5RSxJQUFJLG1CQUFTLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDNUMsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO0tBQ0Y7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFuQkQsc0RBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnYW1lU3RhdGV9IGZyb20gXCIuL2dsb2JhbHNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnNpZGVyTW92aW5nVGhhdFdheSh7IG9mZnNldFcgPSAwLCBvZmZzZXRIID0gMCwgdGV0cm9taW5vIH0pIHtcbiAgLy9jb25zb2xlLmxvZyh0ZXRyb21pbm8pO1xuICBmb3IgKGxldCB0SCA9IDA7IHRIIDwgdGV0cm9taW5vLmxlbmd0aDsgKyt0SCkge1xuICAgIGZvciAobGV0IHRXID0gMDsgdFcgPCB0ZXRyb21pbm9bdEhdLmxlbmd0aDsgKyt0Vykge1xuICAgICAgaWYgKHRldHJvbWlub1t0SF1bdFddID09PSAwKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgbGV0IHdlbGxXID0gZ2FtZVN0YXRlLmRyb3BwaW5nV2lkdGggKyBvZmZzZXRXICsgdFcgKyAxO1xuICAgICAgbGV0IHdlbGxIID0gZ2FtZVN0YXRlLmRyb3BwaW5nSGVpZ2h0ICsgb2Zmc2V0SCArIHRIICsgMTtcbiAgICAgIGlmICh3ZWxsSCA+PSBnYW1lU3RhdGUudGV0cmlzV2VsbC5sZW5ndGgpIHtcbiAgICAgICAgZGVidWdnZXI7XG4gICAgICB9XG4gICAgICAvL2NvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHt3ZWxsSCwgd2VsbFcsIHdlbGw6IHRldHJpc1dlbGxbd2VsbEhdW3dlbGxXXX0pKTtcbiAgICAgIGlmIChnYW1lU3RhdGUudGV0cmlzV2VsbFt3ZWxsSF1bd2VsbFddICE9PSAwKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG4iXX0=\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9ucy50cz84NzE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSxnQ0FBZ0Msc0NBQXNDO0FBQ3RFO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQyx3QkFBd0IsMkJBQTJCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsNkNBQTZDO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMiLCJmaWxlIjoiLi9zcmMvY29sbGlzaW9ucy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZ2xvYmFsc18xID0gcmVxdWlyZShcIi4vZ2xvYmFsc1wiKTtcbmZ1bmN0aW9uIGNvbnNpZGVyTW92aW5nVGhhdFdheSh7IG9mZnNldFcgPSAwLCBvZmZzZXRIID0gMCwgdGV0cm9taW5vIH0pIHtcbiAgICAvL2NvbnNvbGUubG9nKHRldHJvbWlubyk7XG4gICAgZm9yIChsZXQgdEggPSAwOyB0SCA8IHRldHJvbWluby5sZW5ndGg7ICsrdEgpIHtcbiAgICAgICAgZm9yIChsZXQgdFcgPSAwOyB0VyA8IHRldHJvbWlub1t0SF0ubGVuZ3RoOyArK3RXKSB7XG4gICAgICAgICAgICBpZiAodGV0cm9taW5vW3RIXVt0V10gPT09IDApIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB3ZWxsVyA9IGdsb2JhbHNfMS5nYW1lU3RhdGUuZHJvcHBpbmdXaWR0aCArIG9mZnNldFcgKyB0VyArIDE7XG4gICAgICAgICAgICBsZXQgd2VsbEggPSBnbG9iYWxzXzEuZ2FtZVN0YXRlLmRyb3BwaW5nSGVpZ2h0ICsgb2Zmc2V0SCArIHRIICsgMTtcbiAgICAgICAgICAgIGlmICh3ZWxsSCA+PSBnbG9iYWxzXzEuZ2FtZVN0YXRlLnRldHJpc1dlbGwubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgZGVidWdnZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHt3ZWxsSCwgd2VsbFcsIHdlbGw6IHRldHJpc1dlbGxbd2VsbEhdW3dlbGxXXX0pKTtcbiAgICAgICAgICAgIGlmIChnbG9iYWxzXzEuZ2FtZVN0YXRlLnRldHJpc1dlbGxbd2VsbEhdW3dlbGxXXSAhPT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuY29uc2lkZXJNb3ZpbmdUaGF0V2F5ID0gY29uc2lkZXJNb3ZpbmdUaGF0V2F5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWTI5c2JHbHphVzl1Y3k1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OWpiMnhzYVhOcGIyNXpMblJ6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3TzBGQlFVRXNkVU5CUVc5RE8wRkJSWEJETEN0Q1FVRnpReXhGUVVGRkxFOUJRVThzUjBGQlJ5eERRVUZETEVWQlFVVXNUMEZCVHl4SFFVRkhMRU5CUVVNc1JVRkJSU3hUUVVGVExFVkJRVVU3U1VGRE0wVXNlVUpCUVhsQ08wbEJRM3BDTEV0QlFVc3NTVUZCU1N4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFVkJRVVVzUjBGQlJ5eFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRVZCUVVVc1JVRkJSU3hGUVVGRk8xRkJRelZETEV0QlFVc3NTVUZCU1N4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFVkJRVVVzUjBGQlJ5eFRRVUZUTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1RVRkJUU3hGUVVGRkxFVkJRVVVzUlVGQlJTeEZRVUZGTzFsQlEyaEVMRWxCUVVrc1UwRkJVeXhEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1JVRkJSVHRuUWtGRE0wSXNVMEZCVXp0aFFVTldPMWxCUTBRc1NVRkJTU3hMUVVGTExFZEJRVWNzYlVKQlFWTXNRMEZCUXl4aFFVRmhMRWRCUVVjc1QwRkJUeXhIUVVGSExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTTdXVUZEZGtRc1NVRkJTU3hMUVVGTExFZEJRVWNzYlVKQlFWTXNRMEZCUXl4alFVRmpMRWRCUVVjc1QwRkJUeXhIUVVGSExFVkJRVVVzUjBGQlJ5eERRVUZETEVOQlFVTTdXVUZEZUVRc1NVRkJTU3hMUVVGTExFbEJRVWtzYlVKQlFWTXNRMEZCUXl4VlFVRlZMRU5CUVVNc1RVRkJUU3hGUVVGRk8yZENRVU40UXl4UlFVRlJMRU5CUVVNN1lVRkRWanRaUVVORUxEaEZRVUU0UlR0WlFVTTVSU3hKUVVGSkxHMUNRVUZUTEVOQlFVTXNWVUZCVlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNSVUZCUlR0blFrRkROVU1zVDBGQlR5eEpRVUZKTEVOQlFVTTdZVUZEWWp0VFFVTkdPMHRCUTBZN1NVRkRSQ3hQUVVGUExFdEJRVXNzUTBGQlF6dEJRVU5tTEVOQlFVTTdRVUZ1UWtRc2MwUkJiVUpESWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUh0bllXMWxVM1JoZEdWOUlHWnliMjBnWENJdUwyZHNiMkpoYkhOY0lqdGNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR052Ym5OcFpHVnlUVzkyYVc1blZHaGhkRmRoZVNoN0lHOW1abk5sZEZjZ1BTQXdMQ0J2Wm1aelpYUklJRDBnTUN3Z2RHVjBjbTl0YVc1dklIMHBJSHRjYmlBZ0x5OWpiMjV6YjJ4bExteHZaeWgwWlhSeWIyMXBibThwTzF4dUlDQm1iM0lnS0d4bGRDQjBTQ0E5SURBN0lIUklJRHdnZEdWMGNtOXRhVzV2TG14bGJtZDBhRHNnS3l0MFNDa2dlMXh1SUNBZ0lHWnZjaUFvYkdWMElIUlhJRDBnTURzZ2RGY2dQQ0IwWlhSeWIyMXBibTliZEVoZExteGxibWQwYURzZ0t5dDBWeWtnZTF4dUlDQWdJQ0FnYVdZZ0tIUmxkSEp2YldsdWIxdDBTRjFiZEZkZElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lHTnZiblJwYm5WbE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2JHVjBJSGRsYkd4WElEMGdaMkZ0WlZOMFlYUmxMbVJ5YjNCd2FXNW5WMmxrZEdnZ0t5QnZabVp6WlhSWElDc2dkRmNnS3lBeE8xeHVJQ0FnSUNBZ2JHVjBJSGRsYkd4SUlEMGdaMkZ0WlZOMFlYUmxMbVJ5YjNCd2FXNW5TR1ZwWjJoMElDc2diMlptYzJWMFNDQXJJSFJJSUNzZ01UdGNiaUFnSUNBZ0lHbG1JQ2gzWld4c1NDQStQU0JuWVcxbFUzUmhkR1V1ZEdWMGNtbHpWMlZzYkM1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ1pHVmlkV2RuWlhJN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LRXBUVDA0dWMzUnlhVzVuYVdaNUtIdDNaV3hzU0N3Z2QyVnNiRmNzSUhkbGJHdzZJSFJsZEhKcGMxZGxiR3hiZDJWc2JFaGRXM2RsYkd4WFhYMHBLVHRjYmlBZ0lDQWdJR2xtSUNobllXMWxVM1JoZEdVdWRHVjBjbWx6VjJWc2JGdDNaV3hzU0YxYmQyVnNiRmRkSUNFOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwY25WbE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1SUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzU5WEc0aVhYMD0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/collisions.ts\n");

/***/ }),

/***/ "./src/color_list.ts":
/*!***************************!*\
  !*** ./src/color_list.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.colorList = [\n    \"AliceBlue\",\n    \"Aqua\",\n    \"Aquamarine\",\n    \"Azure\",\n    \"Blue\",\n    \"BlueViolet\",\n    \"CadetBlue\",\n    \"Chartreuse\",\n    \"Chocolate\",\n    \"Coral\",\n    \"CornflowerBlue\",\n    \"Cornsilk\",\n    \"Crimson\",\n    \"Cyan\",\n    \"DarkBlue\",\n    \"DarkCyan\",\n    \"DarkGoldenRod\",\n    \"DarkGreen\",\n    \"DarkKhaki\",\n    \"DarkMagenta\",\n    \"DarkOliveGreen\",\n    \"Darkorange\",\n    \"DarkOrchid\",\n    \"DarkRed\",\n    \"DarkSalmon\",\n    \"DarkSeaGreen\",\n    \"DarkSlateBlue\",\n    \"DarkSlateGray\",\n    \"DarkSlateGrey\",\n    \"DarkTurquoise\",\n    \"DarkViolet\",\n    \"DeepPink\",\n    \"DeepSkyBlue\",\n    \"DodgerBlue\",\n    \"FireBrick\",\n    \"FloralWhite\",\n    \"ForestGreen\",\n    \"Fuchsia\",\n    \"Gainsboro\",\n    \"Gold\",\n    \"GoldenRod\",\n    \"Green\",\n    \"GreenYellow\",\n    \"HoneyDew\",\n    \"HotPink\",\n    \"IndianRed\",\n    \"Indigo\",\n    \"Lavender\",\n    \"LavenderBlush\",\n    \"LawnGreen\",\n    \"LemonChiffon\",\n    \"LightBlue\",\n    \"LightCoral\",\n    \"LightCyan\",\n    \"LightGoldenRodYellow\",\n    \"LightGreen\",\n    \"LightPink\",\n    \"LightSalmon\",\n    \"LightSeaGreen\",\n    \"LightSkyBlue\",\n    \"LightSlateGray\",\n    \"LightSlateGrey\",\n    \"LightSteelBlue\",\n    \"LightYellow\",\n    \"Lime\",\n    \"LimeGreen\",\n    \"Linen\",\n    \"Magenta\",\n    \"Maroon\",\n    \"MediumAquaMarine\",\n    \"MediumBlue\",\n    \"MediumOrchid\",\n    \"MediumPurple\",\n    \"MediumSeaGreen\",\n    \"MediumSlateBlue\",\n    \"MediumSpringGreen\",\n    \"MediumTurquoise\",\n    \"MediumVioletRed\",\n    \"MidnightBlue\",\n    \"MintCream\",\n    \"MistyRose\",\n    \"Navy\",\n    \"Olive\",\n    \"OliveDrab\",\n    \"Orange\",\n    \"OrangeRed\",\n    \"Orchid\",\n    \"PaleGoldenRod\",\n    \"PaleGreen\",\n    \"PaleTurquoise\",\n    \"PaleVioletRed\",\n    \"PapayaWhip\",\n    \"PeachPuff\",\n    \"Peru\",\n    \"Pink\",\n    \"Plum\",\n    \"PowderBlue\",\n    \"Purple\",\n    \"Red\",\n    \"RoyalBlue\",\n    \"Salmon\",\n    \"SeaGreen\",\n    \"SeaShell\",\n    \"Silver\",\n    \"SkyBlue\",\n    \"SlateBlue\",\n    \"SpringGreen\",\n    \"SteelBlue\",\n    \"Teal\",\n    \"Thistle\",\n    \"Tomato\",\n    \"Turquoise\",\n    \"Violet\",\n    \"Yellow\",\n    \"YellowGreen\"\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JfbGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb2xvcl9saXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQWEsUUFBQSxTQUFTLEdBQUc7SUFDdkIsV0FBVztJQUNYLE1BQU07SUFDTixZQUFZO0lBQ1osT0FBTztJQUNQLE1BQU07SUFDTixZQUFZO0lBQ1osV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsT0FBTztJQUNQLGdCQUFnQjtJQUNoQixVQUFVO0lBQ1YsU0FBUztJQUNULE1BQU07SUFDTixVQUFVO0lBQ1YsVUFBVTtJQUNWLGVBQWU7SUFDZixXQUFXO0lBQ1gsV0FBVztJQUNYLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLFlBQVk7SUFDWixTQUFTO0lBQ1QsWUFBWTtJQUNaLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsWUFBWTtJQUNaLFVBQVU7SUFDVixhQUFhO0lBQ2IsWUFBWTtJQUNaLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYTtJQUNiLFNBQVM7SUFDVCxXQUFXO0lBQ1gsTUFBTTtJQUNOLFdBQVc7SUFDWCxPQUFPO0lBQ1AsYUFBYTtJQUNiLFVBQVU7SUFDVixTQUFTO0lBQ1QsV0FBVztJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsZUFBZTtJQUNmLFdBQVc7SUFDWCxjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixXQUFXO0lBQ1gsYUFBYTtJQUNiLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLE1BQU07SUFDTixXQUFXO0lBQ1gsT0FBTztJQUNQLFNBQVM7SUFDVCxRQUFRO0lBQ1Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixjQUFjO0lBQ2QsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsY0FBYztJQUNkLFdBQVc7SUFDWCxXQUFXO0lBQ1gsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxRQUFRO0lBQ1IsZUFBZTtJQUNmLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0lBQ1gsTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sWUFBWTtJQUNaLFFBQVE7SUFDUixLQUFLO0lBQ0wsV0FBVztJQUNYLFFBQVE7SUFDUixVQUFVO0lBQ1YsVUFBVTtJQUNWLFFBQVE7SUFDUixTQUFTO0lBQ1QsV0FBVztJQUNYLGFBQWE7SUFDYixXQUFXO0lBQ1gsTUFBTTtJQUNOLFNBQVM7SUFDVCxRQUFRO0lBQ1IsV0FBVztJQUNYLFFBQVE7SUFDUixRQUFRO0lBQ1IsYUFBYTtDQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29sb3JMaXN0ID0gW1xuICBcIkFsaWNlQmx1ZVwiLFxuICBcIkFxdWFcIixcbiAgXCJBcXVhbWFyaW5lXCIsXG4gIFwiQXp1cmVcIixcbiAgXCJCbHVlXCIsXG4gIFwiQmx1ZVZpb2xldFwiLFxuICBcIkNhZGV0Qmx1ZVwiLFxuICBcIkNoYXJ0cmV1c2VcIixcbiAgXCJDaG9jb2xhdGVcIixcbiAgXCJDb3JhbFwiLFxuICBcIkNvcm5mbG93ZXJCbHVlXCIsXG4gIFwiQ29ybnNpbGtcIixcbiAgXCJDcmltc29uXCIsXG4gIFwiQ3lhblwiLFxuICBcIkRhcmtCbHVlXCIsXG4gIFwiRGFya0N5YW5cIixcbiAgXCJEYXJrR29sZGVuUm9kXCIsXG4gIFwiRGFya0dyZWVuXCIsXG4gIFwiRGFya0toYWtpXCIsXG4gIFwiRGFya01hZ2VudGFcIixcbiAgXCJEYXJrT2xpdmVHcmVlblwiLFxuICBcIkRhcmtvcmFuZ2VcIixcbiAgXCJEYXJrT3JjaGlkXCIsXG4gIFwiRGFya1JlZFwiLFxuICBcIkRhcmtTYWxtb25cIixcbiAgXCJEYXJrU2VhR3JlZW5cIixcbiAgXCJEYXJrU2xhdGVCbHVlXCIsXG4gIFwiRGFya1NsYXRlR3JheVwiLFxuICBcIkRhcmtTbGF0ZUdyZXlcIixcbiAgXCJEYXJrVHVycXVvaXNlXCIsXG4gIFwiRGFya1Zpb2xldFwiLFxuICBcIkRlZXBQaW5rXCIsXG4gIFwiRGVlcFNreUJsdWVcIixcbiAgXCJEb2RnZXJCbHVlXCIsXG4gIFwiRmlyZUJyaWNrXCIsXG4gIFwiRmxvcmFsV2hpdGVcIixcbiAgXCJGb3Jlc3RHcmVlblwiLFxuICBcIkZ1Y2hzaWFcIixcbiAgXCJHYWluc2Jvcm9cIixcbiAgXCJHb2xkXCIsXG4gIFwiR29sZGVuUm9kXCIsXG4gIFwiR3JlZW5cIixcbiAgXCJHcmVlblllbGxvd1wiLFxuICBcIkhvbmV5RGV3XCIsXG4gIFwiSG90UGlua1wiLFxuICBcIkluZGlhblJlZFwiLFxuICBcIkluZGlnb1wiLFxuICBcIkxhdmVuZGVyXCIsXG4gIFwiTGF2ZW5kZXJCbHVzaFwiLFxuICBcIkxhd25HcmVlblwiLFxuICBcIkxlbW9uQ2hpZmZvblwiLFxuICBcIkxpZ2h0Qmx1ZVwiLFxuICBcIkxpZ2h0Q29yYWxcIixcbiAgXCJMaWdodEN5YW5cIixcbiAgXCJMaWdodEdvbGRlblJvZFllbGxvd1wiLFxuICBcIkxpZ2h0R3JlZW5cIixcbiAgXCJMaWdodFBpbmtcIixcbiAgXCJMaWdodFNhbG1vblwiLFxuICBcIkxpZ2h0U2VhR3JlZW5cIixcbiAgXCJMaWdodFNreUJsdWVcIixcbiAgXCJMaWdodFNsYXRlR3JheVwiLFxuICBcIkxpZ2h0U2xhdGVHcmV5XCIsXG4gIFwiTGlnaHRTdGVlbEJsdWVcIixcbiAgXCJMaWdodFllbGxvd1wiLFxuICBcIkxpbWVcIixcbiAgXCJMaW1lR3JlZW5cIixcbiAgXCJMaW5lblwiLFxuICBcIk1hZ2VudGFcIixcbiAgXCJNYXJvb25cIixcbiAgXCJNZWRpdW1BcXVhTWFyaW5lXCIsXG4gIFwiTWVkaXVtQmx1ZVwiLFxuICBcIk1lZGl1bU9yY2hpZFwiLFxuICBcIk1lZGl1bVB1cnBsZVwiLFxuICBcIk1lZGl1bVNlYUdyZWVuXCIsXG4gIFwiTWVkaXVtU2xhdGVCbHVlXCIsXG4gIFwiTWVkaXVtU3ByaW5nR3JlZW5cIixcbiAgXCJNZWRpdW1UdXJxdW9pc2VcIixcbiAgXCJNZWRpdW1WaW9sZXRSZWRcIixcbiAgXCJNaWRuaWdodEJsdWVcIixcbiAgXCJNaW50Q3JlYW1cIixcbiAgXCJNaXN0eVJvc2VcIixcbiAgXCJOYXZ5XCIsXG4gIFwiT2xpdmVcIixcbiAgXCJPbGl2ZURyYWJcIixcbiAgXCJPcmFuZ2VcIixcbiAgXCJPcmFuZ2VSZWRcIixcbiAgXCJPcmNoaWRcIixcbiAgXCJQYWxlR29sZGVuUm9kXCIsXG4gIFwiUGFsZUdyZWVuXCIsXG4gIFwiUGFsZVR1cnF1b2lzZVwiLFxuICBcIlBhbGVWaW9sZXRSZWRcIixcbiAgXCJQYXBheWFXaGlwXCIsXG4gIFwiUGVhY2hQdWZmXCIsXG4gIFwiUGVydVwiLFxuICBcIlBpbmtcIixcbiAgXCJQbHVtXCIsXG4gIFwiUG93ZGVyQmx1ZVwiLFxuICBcIlB1cnBsZVwiLFxuICBcIlJlZFwiLFxuICBcIlJveWFsQmx1ZVwiLFxuICBcIlNhbG1vblwiLFxuICBcIlNlYUdyZWVuXCIsXG4gIFwiU2VhU2hlbGxcIixcbiAgXCJTaWx2ZXJcIixcbiAgXCJTa3lCbHVlXCIsXG4gIFwiU2xhdGVCbHVlXCIsXG4gIFwiU3ByaW5nR3JlZW5cIixcbiAgXCJTdGVlbEJsdWVcIixcbiAgXCJUZWFsXCIsXG4gIFwiVGhpc3RsZVwiLFxuICBcIlRvbWF0b1wiLFxuICBcIlR1cnF1b2lzZVwiLFxuICBcIlZpb2xldFwiLFxuICBcIlllbGxvd1wiLFxuICBcIlllbGxvd0dyZWVuXCJcbl07XG4iXX0=\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/color_list.ts\n");

/***/ }),

/***/ "./src/draw.ts":
/*!*********************!*\
  !*** ./src/draw.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// todo: move initialization stuff out to somewhere else\nconst globals_1 = __webpack_require__(/*! ./globals */ \"./src/globals.ts\");\nconst tetrominos_1 = __webpack_require__(/*! ./tetrominos */ \"./src/tetrominos.ts\");\nconst canvas_1 = __webpack_require__(/*! ./canvas */ \"./src/canvas.ts\");\nfunction createGrid({ width, height, }) {\n    const grid = Array(height);\n    for (let h = 0; h < height; ++h) {\n        grid[h] = Array(width)\n            .fill(0);\n    }\n    return grid;\n}\nglobals_1.gameState.tetrisWell = createGrid({\n    width: globals_1.gameState.wellWidth + 2,\n    height: globals_1.gameState.wellHeight + 5,\n});\nconst canvasState = canvas_1.canvasCtor();\nlet ctx = canvasState.ctx;\nlet canvas = canvasState.canvas;\nconst wellBorderLeft = -1;\nconst wellBorderRight = -2;\nconst wellBorderBottom = -3;\nfunction addBorders() {\n    for (let i = 0; i < globals_1.gameState.tetrisWell.length; ++i) {\n        globals_1.gameState.tetrisWell[i][0] = wellBorderLeft;\n        globals_1.gameState.tetrisWell[i][globals_1.gameState.wellWidth + 1] = wellBorderRight;\n    }\n    for (let i = 0; i < globals_1.gameState.tetrisWell[0].length; ++i) {\n        globals_1.gameState.tetrisWell[0][i] = wellBorderBottom;\n    }\n}\naddBorders();\nglobals_1.gameState.tetrisWell[2][globals_1.gameState.wellWidth + 1] = 1;\nlet pieceWidth = canvas.width / globals_1.gameState.wellWidth;\nlet pieceHeight = canvas.height / globals_1.gameState.wellHeight;\nfunction toScreenCoords({ h, w, }) {\n    return {\n        x: w * pieceWidth,\n        y: canvas.height - (h + 1) * pieceHeight,\n    };\n}\nfunction drawPlayerArea() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = 'black';\n    ctx.fillStyle = 'black';\n    ctx.imageSmoothingEnabled = false;\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n}\nfunction drawWell() {\n    for (let h = 0; h < globals_1.gameState.wellHeight; ++h) {\n        for (let w = 0; w < globals_1.gameState.wellWidth; ++w) {\n            if (globals_1.gameState.tetrisWell[h + 1][w + 1] !== 0) {\n                const { x, y } = toScreenCoords({\n                    h,\n                    w,\n                });\n                ctx.fillRect(x, y, pieceWidth, pieceHeight);\n            }\n        }\n    }\n}\nfunction pickTetrominoColor(x, y, color) {\n    let gradient = ctx.createRadialGradient(x, y, 10, x + 1, y + 1, 40);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, 'white');\n    return gradient;\n}\nfunction drawTetromino(orientation, color) {\n    // console.log(JSON.stringify(\n    //   {\n    //     droppingWidth,\n    //     droppingHeight,\n    //   },\n    //   undefined,\n    //   2,\n    // ));\n    let currentTetromino = tetrominos_1.tetrominos[globals_1.gameState.droppingTetromino][orientation];\n    for (let i = 0; i < currentTetromino.length; i++) {\n        for (let j = 0; j < currentTetromino[i].length; j++) {\n            if (currentTetromino[i][j] !== 1) {\n                continue;\n            }\n            const { x, y } = toScreenCoords({\n                h: globals_1.gameState.droppingHeight + i,\n                w: globals_1.gameState.droppingWidth + j,\n            });\n            const gradient = pickTetrominoColor(x, y, color);\n            ctx.fillStyle = gradient;\n            ctx.fillRect(x, y, pieceWidth, pieceHeight);\n        }\n    }\n}\nfunction draw() {\n    drawPlayerArea();\n    drawWell();\n    drawTetromino(globals_1.gameState.pieceOrientation, globals_1.gameState.currentTetrominoGradient);\n}\nexports.draw = draw;\n//# sourceMappingURL=data:application/json;base64,\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/draw.ts\n");

/***/ }),

/***/ "./src/globals.ts":
/*!************************!*\
  !*** ./src/globals.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst choose_color_1 = __webpack_require__(/*! ./choose_color */ \"./src/choose_color.ts\");\nconst Random = __webpack_require__(/*! random-js */ \"./node_modules/random-js/lib/random.js\");\nexports.gameState = {\n    wellWidth: 10,\n    wellHeight: 22,\n    pieceUp: 0,\n    pieceRight: 1,\n    pieceDown: 2,\n    pieceLeft: 3,\n    pieceMax: 4,\n    // recommended to make one of these per process\n    random: new Random(Random.engines.mt19937().autoSeed()),\n    droppingHeight: 22,\n    droppingWidth: 5,\n    droppingDelta: 0,\n    defaultDroppingRate: 500,\n    fastDroppingRate: 25,\n    droppingRate: 500,\n    droppingTetromino: 0,\n    pieceOrientation: 2,\n    trackedTetrominoPosition: 22,\n    currentTetrominoGradient: choose_color_1.chooseColor(),\n    tetrisWell: [[0]],\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQTJDO0FBQzNDLG9DQUFvQztBQUV2QixRQUFBLFNBQVMsR0FBUTtJQUM1QixTQUFTLEVBQUUsRUFBRTtJQUNiLFVBQVUsRUFBRSxFQUFFO0lBQ2QsT0FBTyxFQUFFLENBQUM7SUFDVixVQUFVLEVBQUUsQ0FBQztJQUNiLFNBQVMsRUFBRSxDQUFDO0lBQ1osU0FBUyxFQUFFLENBQUM7SUFDWixRQUFRLEVBQUUsQ0FBQztJQUNYLCtDQUErQztJQUMvQyxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUd2RCxjQUFjLEVBQUUsRUFBRTtJQUNsQixhQUFhLEVBQUUsQ0FBQztJQUNoQixhQUFhLEVBQUUsQ0FBQztJQUNoQixtQkFBbUIsRUFBRSxHQUFHO0lBQ3hCLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIsWUFBWSxFQUFFLEdBQUc7SUFDakIsaUJBQWlCLEVBQUUsQ0FBQztJQUNwQixnQkFBZ0IsRUFBRSxDQUFDO0lBQ25CLHdCQUF3QixFQUFFLEVBQUU7SUFDNUIsd0JBQXdCLEVBQUUsMEJBQVcsRUFBRTtJQUN2QyxVQUFVLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Nob29zZUNvbG9yfSBmcm9tIFwiLi9jaG9vc2VfY29sb3JcIjtcbmltcG9ydCAqIGFzIFJhbmRvbSBmcm9tIFwicmFuZG9tLWpzXCI7XG5cbmV4cG9ydCBjb25zdCBnYW1lU3RhdGU6IGFueSA9IHtcbiAgd2VsbFdpZHRoOiAxMCxcbiAgd2VsbEhlaWdodDogMjIsXG4gIHBpZWNlVXA6IDAsXG4gIHBpZWNlUmlnaHQ6IDEsXG4gIHBpZWNlRG93bjogMixcbiAgcGllY2VMZWZ0OiAzLFxuICBwaWVjZU1heDogNCxcbiAgLy8gcmVjb21tZW5kZWQgdG8gbWFrZSBvbmUgb2YgdGhlc2UgcGVyIHByb2Nlc3NcbiAgcmFuZG9tOiBuZXcgUmFuZG9tKFJhbmRvbS5lbmdpbmVzLm10MTk5MzcoKS5hdXRvU2VlZCgpKSxcblxuXG4gIGRyb3BwaW5nSGVpZ2h0OiAyMixcbiAgZHJvcHBpbmdXaWR0aDogNSxcbiAgZHJvcHBpbmdEZWx0YTogMCxcbiAgZGVmYXVsdERyb3BwaW5nUmF0ZTogNTAwLFxuICBmYXN0RHJvcHBpbmdSYXRlOiAyNSxcbiAgZHJvcHBpbmdSYXRlOiA1MDAsXG4gIGRyb3BwaW5nVGV0cm9taW5vOiAwLFxuICBwaWVjZU9yaWVudGF0aW9uOiAyLFxuICB0cmFja2VkVGV0cm9taW5vUG9zaXRpb246IDIyLFxuICBjdXJyZW50VGV0cm9taW5vR3JhZGllbnQ6IGNob29zZUNvbG9yKCksXG4gIHRldHJpc1dlbGw6W1swXV0sXG59O1xuXG4iXX0=\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2xvYmFscy50cz80MWQ2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDIiwiZmlsZSI6Ii4vc3JjL2dsb2JhbHMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNob29zZV9jb2xvcl8xID0gcmVxdWlyZShcIi4vY2hvb3NlX2NvbG9yXCIpO1xuY29uc3QgUmFuZG9tID0gcmVxdWlyZShcInJhbmRvbS1qc1wiKTtcbmV4cG9ydHMuZ2FtZVN0YXRlID0ge1xuICAgIHdlbGxXaWR0aDogMTAsXG4gICAgd2VsbEhlaWdodDogMjIsXG4gICAgcGllY2VVcDogMCxcbiAgICBwaWVjZVJpZ2h0OiAxLFxuICAgIHBpZWNlRG93bjogMixcbiAgICBwaWVjZUxlZnQ6IDMsXG4gICAgcGllY2VNYXg6IDQsXG4gICAgLy8gcmVjb21tZW5kZWQgdG8gbWFrZSBvbmUgb2YgdGhlc2UgcGVyIHByb2Nlc3NcbiAgICByYW5kb206IG5ldyBSYW5kb20oUmFuZG9tLmVuZ2luZXMubXQxOTkzNygpLmF1dG9TZWVkKCkpLFxuICAgIGRyb3BwaW5nSGVpZ2h0OiAyMixcbiAgICBkcm9wcGluZ1dpZHRoOiA1LFxuICAgIGRyb3BwaW5nRGVsdGE6IDAsXG4gICAgZGVmYXVsdERyb3BwaW5nUmF0ZTogNTAwLFxuICAgIGZhc3REcm9wcGluZ1JhdGU6IDI1LFxuICAgIGRyb3BwaW5nUmF0ZTogNTAwLFxuICAgIGRyb3BwaW5nVGV0cm9taW5vOiAwLFxuICAgIHBpZWNlT3JpZW50YXRpb246IDIsXG4gICAgdHJhY2tlZFRldHJvbWlub1Bvc2l0aW9uOiAyMixcbiAgICBjdXJyZW50VGV0cm9taW5vR3JhZGllbnQ6IGNob29zZV9jb2xvcl8xLmNob29zZUNvbG9yKCksXG4gICAgdGV0cmlzV2VsbDogW1swXV0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWjJ4dlltRnNjeTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklpNHVMM055WXk5bmJHOWlZV3h6TG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN08wRkJRVUVzYVVSQlFUSkRPMEZCUXpORExHOURRVUZ2UXp0QlFVVjJRaXhSUVVGQkxGTkJRVk1zUjBGQlVUdEpRVU0xUWl4VFFVRlRMRVZCUVVVc1JVRkJSVHRKUVVOaUxGVkJRVlVzUlVGQlJTeEZRVUZGTzBsQlEyUXNUMEZCVHl4RlFVRkZMRU5CUVVNN1NVRkRWaXhWUVVGVkxFVkJRVVVzUTBGQlF6dEpRVU5pTEZOQlFWTXNSVUZCUlN4RFFVRkRPMGxCUTFvc1UwRkJVeXhGUVVGRkxFTkJRVU03U1VGRFdpeFJRVUZSTEVWQlFVVXNRMEZCUXp0SlFVTllMQ3REUVVFclF6dEpRVU12UXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEU5QlFVOHNRMEZCUXl4UFFVRlBMRVZCUVVVc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dEpRVWQyUkN4alFVRmpMRVZCUVVVc1JVRkJSVHRKUVVOc1FpeGhRVUZoTEVWQlFVVXNRMEZCUXp0SlFVTm9RaXhoUVVGaExFVkJRVVVzUTBGQlF6dEpRVU5vUWl4dFFrRkJiVUlzUlVGQlJTeEhRVUZITzBsQlEzaENMR2RDUVVGblFpeEZRVUZGTEVWQlFVVTdTVUZEY0VJc1dVRkJXU3hGUVVGRkxFZEJRVWM3U1VGRGFrSXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlF6dEpRVU53UWl4blFrRkJaMElzUlVGQlJTeERRVUZETzBsQlEyNUNMSGRDUVVGM1FpeEZRVUZGTEVWQlFVVTdTVUZETlVJc2QwSkJRWGRDTEVWQlFVVXNNRUpCUVZjc1JVRkJSVHRKUVVOMlF5eFZRVUZWTEVWQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wTkJRMnBDTEVOQlFVTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdlMk5vYjI5elpVTnZiRzl5ZlNCbWNtOXRJRndpTGk5amFHOXZjMlZmWTI5c2IzSmNJanRjYm1sdGNHOXlkQ0FxSUdGeklGSmhibVJ2YlNCbWNtOXRJRndpY21GdVpHOXRMV3B6WENJN1hHNWNibVY0Y0c5eWRDQmpiMjV6ZENCbllXMWxVM1JoZEdVNklHRnVlU0E5SUh0Y2JpQWdkMlZzYkZkcFpIUm9PaUF4TUN4Y2JpQWdkMlZzYkVobGFXZG9kRG9nTWpJc1hHNGdJSEJwWldObFZYQTZJREFzWEc0Z0lIQnBaV05sVW1sbmFIUTZJREVzWEc0Z0lIQnBaV05sUkc5M2Jqb2dNaXhjYmlBZ2NHbGxZMlZNWldaME9pQXpMRnh1SUNCd2FXVmpaVTFoZURvZ05DeGNiaUFnTHk4Z2NtVmpiMjF0Wlc1a1pXUWdkRzhnYldGclpTQnZibVVnYjJZZ2RHaGxjMlVnY0dWeUlIQnliMk5sYzNOY2JpQWdjbUZ1Wkc5dE9pQnVaWGNnVW1GdVpHOXRLRkpoYm1SdmJTNWxibWRwYm1WekxtMTBNVGs1TXpjb0tTNWhkWFJ2VTJWbFpDZ3BLU3hjYmx4dVhHNGdJR1J5YjNCd2FXNW5TR1ZwWjJoME9pQXlNaXhjYmlBZ1pISnZjSEJwYm1kWGFXUjBhRG9nTlN4Y2JpQWdaSEp2Y0hCcGJtZEVaV3gwWVRvZ01DeGNiaUFnWkdWbVlYVnNkRVJ5YjNCd2FXNW5VbUYwWlRvZ05UQXdMRnh1SUNCbVlYTjBSSEp2Y0hCcGJtZFNZWFJsT2lBeU5TeGNiaUFnWkhKdmNIQnBibWRTWVhSbE9pQTFNREFzWEc0Z0lHUnliM0J3YVc1blZHVjBjbTl0YVc1dk9pQXdMRnh1SUNCd2FXVmpaVTl5YVdWdWRHRjBhVzl1T2lBeUxGeHVJQ0IwY21GamEyVmtWR1YwY205dGFXNXZVRzl6YVhScGIyNDZJREl5TEZ4dUlDQmpkWEp5Wlc1MFZHVjBjbTl0YVc1dlIzSmhaR2xsYm5RNklHTm9iMjl6WlVOdmJHOXlLQ2tzWEc0Z0lIUmxkSEpwYzFkbGJHdzZXMXN3WFYwc1hHNTlPMXh1WEc0aVhYMD0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/globals.ts\n");

/***/ }),

/***/ "./src/inputs.ts":
/*!***********************!*\
  !*** ./src/inputs.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = __webpack_require__(/*! ./globals */ \"./src/globals.ts\");\nconst tetrominos_1 = __webpack_require__(/*! ./tetrominos */ \"./src/tetrominos.ts\");\nconst collisions_1 = __webpack_require__(/*! ./collisions */ \"./src/collisions.ts\");\nconst audio_1 = __webpack_require__(/*! ./audio */ \"./src/audio.ts\");\nconst keyPressed = Object.create(null);\nconst movementInputRate = 100;\nlet movementInputDelta = 0;\nlet rotateKeyPressed = false;\nlet downKeyPressed = false;\nlet lastInputTime = Date.now();\nfunction rotateLeft(orientation) {\n    return (orientation + 1) % globals_1.gameState.pieceMax;\n}\nfunction rotateRight(orientation) {\n    return (orientation - 1) % globals_1.gameState.pieceMax;\n}\nfunction handleRotate() {\n    if (keyPressed.ArrowUp && !rotateKeyPressed) {\n        rotateKeyPressed = true;\n        const potentialOrientation = rotateLeft(globals_1.gameState.pieceOrientation);\n        const tetromino = tetrominos_1.tetrominos[globals_1.gameState.droppingTetromino][potentialOrientation];\n        const collision = collisions_1.considerMovingThatWay({\n            tetromino,\n        });\n        if (!collision) {\n            globals_1.gameState.pieceOrientation = potentialOrientation;\n            audio_1.playRotate();\n        }\n        // TODO: Bump if out of bounds\n    }\n}\nfunction handleLeftRightMovement(tetromino) {\n    const direction = keyPressed.ArrowRight ? 1 : -1;\n    const collision = collisions_1.considerMovingThatWay({\n        offsetW: direction,\n        tetromino,\n    });\n    if (!collision) {\n        globals_1.gameState.droppingWidth += direction;\n    }\n}\nfunction handleDrop() {\n    globals_1.gameState.droppingRate = downKeyPressed ? globals_1.gameState.fastDroppingRate : globals_1.gameState.defaultDroppingRate;\n}\nfunction handleMovement(delta) {\n    movementInputDelta += delta;\n    if (keyPressed.ArrowDown) {\n        downKeyPressed = true;\n    }\n    handleDrop();\n    if (movementInputDelta > movementInputRate) {\n        movementInputDelta -= movementInputRate;\n        const tetromino = tetrominos_1.tetrominos[globals_1.gameState.droppingTetromino][globals_1.gameState.pieceOrientation];\n        if (keyPressed.ArrowLeft || keyPressed.ArrowRight) {\n            handleLeftRightMovement(tetromino);\n        }\n    }\n}\nfunction handleKeyInputs(delta) {\n    handleRotate();\n    handleMovement(delta);\n    lastInputTime = Date.now();\n}\nexports.handleKeyInputs = handleKeyInputs;\nfunction resetKeyPress() {\n    rotateKeyPressed = false;\n    downKeyPressed = false;\n}\n// Event listeners\ndocument.addEventListener('keyup', (event) => {\n    const { key } = event;\n    delete keyPressed[key];\n    resetKeyPress();\n}, false);\ndocument.addEventListener('keydown', (event) => {\n    const { key } = event;\n    keyPressed[key] = 1;\n}, false);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2lucHV0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFvQztBQUNwQyw2Q0FBd0M7QUFDeEMsNkNBQW1EO0FBQ25ELG1DQUFtQztBQUVuQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFDO0FBQzlCLElBQUksa0JBQWtCLEdBQUcsQ0FBQyxDQUFDO0FBQzNCLElBQUksZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO0FBQzdCLElBQUksY0FBYyxHQUFHLEtBQUssQ0FBQztBQUMzQixJQUFJLGFBQWEsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7QUFFL0Isb0JBQW9CLFdBQVc7SUFDN0IsT0FBTyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsR0FBRyxtQkFBUyxDQUFDLFFBQVEsQ0FBQztBQUNoRCxDQUFDO0FBRUQscUJBQXFCLFdBQVc7SUFDOUIsT0FBTyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsR0FBRyxtQkFBUyxDQUFDLFFBQVEsQ0FBQztBQUNoRCxDQUFDO0FBRUQ7SUFDRSxJQUFJLFVBQVUsQ0FBQyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtRQUMzQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDeEIsTUFBTSxvQkFBb0IsR0FBRyxVQUFVLENBQUMsbUJBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sU0FBUyxHQUFHLHVCQUFVLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFaEYsTUFBTSxTQUFTLEdBQUcsa0NBQXFCLENBQUM7WUFDdEMsU0FBUztTQUNWLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDZCxtQkFBUyxDQUFDLGdCQUFnQixHQUFHLG9CQUFvQixDQUFDO1lBQ2xELGtCQUFVLEVBQUUsQ0FBQztTQUNkO1FBQ0QsOEJBQThCO0tBQy9CO0FBQ0gsQ0FBQztBQUVELGlDQUFpQyxTQUFTO0lBQ3hDLE1BQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFakQsTUFBTSxTQUFTLEdBQUcsa0NBQXFCLENBQUM7UUFDdEMsT0FBTyxFQUFFLFNBQVM7UUFDbEIsU0FBUztLQUNWLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZCxtQkFBUyxDQUFDLGFBQWEsSUFBSSxTQUFTLENBQUM7S0FDdEM7QUFDSCxDQUFDO0FBRUQ7SUFDRSxtQkFBUyxDQUFDLFlBQVksR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLG1CQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLG1CQUFTLENBQUMsbUJBQW1CLENBQUM7QUFDdkcsQ0FBQztBQUVELHdCQUF3QixLQUFLO0lBQzNCLGtCQUFrQixJQUFJLEtBQUssQ0FBQztJQUc1QixJQUFJLFVBQVUsQ0FBQyxTQUFTLEVBQUU7UUFDeEIsY0FBYyxHQUFHLElBQUksQ0FBQztLQUN2QjtJQUNELFVBQVUsRUFBRSxDQUFDO0lBRWIsSUFBSSxrQkFBa0IsR0FBRyxpQkFBaUIsRUFBRTtRQUMxQyxrQkFBa0IsSUFBSSxpQkFBaUIsQ0FBQztRQUN4QyxNQUFNLFNBQVMsR0FBRyx1QkFBVSxDQUFDLG1CQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxtQkFBUyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFdEYsSUFBSSxVQUFVLENBQUMsU0FBUyxJQUFJLFVBQVUsQ0FBQyxVQUFVLEVBQUU7WUFDakQsdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDcEM7S0FDRjtBQUNILENBQUM7QUFFRCx5QkFBZ0MsS0FBSztJQUNuQyxZQUFZLEVBQUUsQ0FBQztJQUNmLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFKRCwwQ0FJQztBQUVEO0lBQ0UsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDekIsQ0FBQztBQUVELGtCQUFrQjtBQUNsQixRQUFRLENBQUMsZ0JBQWdCLENBQ3ZCLE9BQU8sRUFDUCxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ1IsTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQztJQUN0QixPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixhQUFhLEVBQUUsQ0FBQztBQUNsQixDQUFDLEVBQ0QsS0FBSyxDQUNOLENBQUM7QUFFRixRQUFRLENBQUMsZ0JBQWdCLENBQ3ZCLFNBQVMsRUFDVCxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ1IsTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQztJQUN0QixVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCLENBQUMsRUFDRCxLQUFLLENBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2FtZVN0YXRlfSBmcm9tIFwiLi9nbG9iYWxzXCI7XG5pbXBvcnQge3RldHJvbWlub3N9IGZyb20gXCIuL3RldHJvbWlub3NcIjtcbmltcG9ydCB7Y29uc2lkZXJNb3ZpbmdUaGF0V2F5fSBmcm9tIFwiLi9jb2xsaXNpb25zXCI7XG5pbXBvcnQge3BsYXlSb3RhdGV9IGZyb20gXCIuL2F1ZGlvXCI7XG5cbmNvbnN0IGtleVByZXNzZWQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuY29uc3QgbW92ZW1lbnRJbnB1dFJhdGUgPSAxMDA7XG5sZXQgbW92ZW1lbnRJbnB1dERlbHRhID0gMDtcbmxldCByb3RhdGVLZXlQcmVzc2VkID0gZmFsc2U7XG5sZXQgZG93bktleVByZXNzZWQgPSBmYWxzZTtcbmxldCBsYXN0SW5wdXRUaW1lID0gRGF0ZS5ub3coKTtcblxuZnVuY3Rpb24gcm90YXRlTGVmdChvcmllbnRhdGlvbikge1xuICByZXR1cm4gKG9yaWVudGF0aW9uICsgMSkgJSBnYW1lU3RhdGUucGllY2VNYXg7XG59XG5cbmZ1bmN0aW9uIHJvdGF0ZVJpZ2h0KG9yaWVudGF0aW9uKSB7XG4gIHJldHVybiAob3JpZW50YXRpb24gLSAxKSAlIGdhbWVTdGF0ZS5waWVjZU1heDtcbn1cblxuZnVuY3Rpb24gaGFuZGxlUm90YXRlKCkge1xuICBpZiAoa2V5UHJlc3NlZC5BcnJvd1VwICYmICFyb3RhdGVLZXlQcmVzc2VkKSB7XG4gICAgcm90YXRlS2V5UHJlc3NlZCA9IHRydWU7XG4gICAgY29uc3QgcG90ZW50aWFsT3JpZW50YXRpb24gPSByb3RhdGVMZWZ0KGdhbWVTdGF0ZS5waWVjZU9yaWVudGF0aW9uKTtcbiAgICBjb25zdCB0ZXRyb21pbm8gPSB0ZXRyb21pbm9zW2dhbWVTdGF0ZS5kcm9wcGluZ1RldHJvbWlub11bcG90ZW50aWFsT3JpZW50YXRpb25dO1xuXG4gICAgY29uc3QgY29sbGlzaW9uID0gY29uc2lkZXJNb3ZpbmdUaGF0V2F5KHtcbiAgICAgIHRldHJvbWlubyxcbiAgICB9KTtcblxuICAgIGlmICghY29sbGlzaW9uKSB7XG4gICAgICBnYW1lU3RhdGUucGllY2VPcmllbnRhdGlvbiA9IHBvdGVudGlhbE9yaWVudGF0aW9uO1xuICAgICAgcGxheVJvdGF0ZSgpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBCdW1wIGlmIG91dCBvZiBib3VuZHNcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVMZWZ0UmlnaHRNb3ZlbWVudCh0ZXRyb21pbm8pIHtcbiAgY29uc3QgZGlyZWN0aW9uID0ga2V5UHJlc3NlZC5BcnJvd1JpZ2h0ID8gMSA6IC0xO1xuXG4gIGNvbnN0IGNvbGxpc2lvbiA9IGNvbnNpZGVyTW92aW5nVGhhdFdheSh7XG4gICAgb2Zmc2V0VzogZGlyZWN0aW9uLFxuICAgIHRldHJvbWlubyxcbiAgfSk7XG5cbiAgaWYgKCFjb2xsaXNpb24pIHtcbiAgICBnYW1lU3RhdGUuZHJvcHBpbmdXaWR0aCArPSBkaXJlY3Rpb247XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRHJvcCgpIHtcbiAgZ2FtZVN0YXRlLmRyb3BwaW5nUmF0ZSA9IGRvd25LZXlQcmVzc2VkID8gZ2FtZVN0YXRlLmZhc3REcm9wcGluZ1JhdGUgOiBnYW1lU3RhdGUuZGVmYXVsdERyb3BwaW5nUmF0ZTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTW92ZW1lbnQoZGVsdGEpIHtcbiAgbW92ZW1lbnRJbnB1dERlbHRhICs9IGRlbHRhO1xuXG5cbiAgaWYgKGtleVByZXNzZWQuQXJyb3dEb3duKSB7XG4gICAgZG93bktleVByZXNzZWQgPSB0cnVlO1xuICB9XG4gIGhhbmRsZURyb3AoKTtcblxuICBpZiAobW92ZW1lbnRJbnB1dERlbHRhID4gbW92ZW1lbnRJbnB1dFJhdGUpIHtcbiAgICBtb3ZlbWVudElucHV0RGVsdGEgLT0gbW92ZW1lbnRJbnB1dFJhdGU7XG4gICAgY29uc3QgdGV0cm9taW5vID0gdGV0cm9taW5vc1tnYW1lU3RhdGUuZHJvcHBpbmdUZXRyb21pbm9dW2dhbWVTdGF0ZS5waWVjZU9yaWVudGF0aW9uXTtcblxuICAgIGlmIChrZXlQcmVzc2VkLkFycm93TGVmdCB8fCBrZXlQcmVzc2VkLkFycm93UmlnaHQpIHtcbiAgICAgIGhhbmRsZUxlZnRSaWdodE1vdmVtZW50KHRldHJvbWlubyk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVLZXlJbnB1dHMoZGVsdGEpIHtcbiAgaGFuZGxlUm90YXRlKCk7XG4gIGhhbmRsZU1vdmVtZW50KGRlbHRhKTtcbiAgbGFzdElucHV0VGltZSA9IERhdGUubm93KCk7XG59XG5cbmZ1bmN0aW9uIHJlc2V0S2V5UHJlc3MoKSB7XG4gIHJvdGF0ZUtleVByZXNzZWQgPSBmYWxzZTtcbiAgZG93bktleVByZXNzZWQgPSBmYWxzZTtcbn1cblxuLy8gRXZlbnQgbGlzdGVuZXJzXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFxuICAna2V5dXAnLFxuICAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB7IGtleSB9ID0gZXZlbnQ7XG4gICAgZGVsZXRlIGtleVByZXNzZWRba2V5XTtcbiAgICByZXNldEtleVByZXNzKCk7XG4gIH0sXG4gIGZhbHNlLFxuKTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcbiAgJ2tleWRvd24nLFxuICAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB7IGtleSB9ID0gZXZlbnQ7XG4gICAga2V5UHJlc3NlZFtrZXldID0gMTtcbiAgfSxcbiAgZmFsc2UsXG4pO1xuIl19\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/inputs.ts\n");

/***/ }),

/***/ "./src/tetris.ts":
/*!***********************!*\
  !*** ./src/tetris.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MainLoop = __webpack_require__(/*! mainloop.js */ \"./node_modules/mainloop.js/build/mainloop.min.js\");\nconst globals_1 = __webpack_require__(/*! ./globals */ \"./src/globals.ts\");\nconst collisions_1 = __webpack_require__(/*! ./collisions */ \"./src/collisions.ts\");\nconst clear_lines_1 = __webpack_require__(/*! ./clear_lines */ \"./src/clear_lines.ts\");\nconst tetrominos_1 = __webpack_require__(/*! ./tetrominos */ \"./src/tetrominos.ts\");\nconst inputs_1 = __webpack_require__(/*! ./inputs */ \"./src/inputs.ts\");\nconst choose_color_1 = __webpack_require__(/*! ./choose_color */ \"./src/choose_color.ts\");\nconst draw_1 = __webpack_require__(/*! ./draw */ \"./src/draw.ts\");\n{\n    console.log(MainLoop);\n    MainLoop.setUpdate(update)\n        .setDraw(draw_1.draw)\n        .setEnd(end)\n        .start();\n    function end(fps, panic) {\n        if (panic) {\n            MainLoop.resetFrameDelta();\n        }\n    }\n    function pickNewPiece() {\n        // -1 is to allow for range in 0 based Array\n        globals_1.gameState.droppingTetromino = globals_1.gameState.random.integer(1, tetrominos_1.tetrominos.length) - 1;\n    }\n    function commitToWell(tetromino) {\n        for (let tH = 0; tH < tetromino.length; ++tH) {\n            for (let tW = 0; tW < tetromino[tH].length; ++tW) {\n                if (tetromino[tH][tW] === 0) {\n                    continue;\n                }\n                let wellW = globals_1.gameState.droppingWidth + tW + 1;\n                let wellH = globals_1.gameState.droppingHeight + tH + 1;\n                globals_1.gameState.tetrisWell[wellH][wellW] = 1; // tetromino[tH][tW];\n            }\n        }\n    }\n    function updateDrop(delta) {\n        const tetromino = tetrominos_1.tetrominos[globals_1.gameState.droppingTetromino][globals_1.gameState.pieceOrientation];\n        globals_1.gameState.droppingDelta += delta;\n        if (globals_1.gameState.droppingDelta > globals_1.gameState.droppingRate) {\n            const colliding = collisions_1.considerMovingThatWay({\n                offsetH: -1,\n                tetromino,\n            });\n            if (!colliding) {\n                globals_1.gameState.droppingHeight -= 1;\n                globals_1.gameState.droppingDelta -= globals_1.gameState.droppingRate;\n                // todo: add some latch time before committing the the well.\n            }\n            else {\n                // todo: copy into well\n                // todo: spawn new piece\n                commitToWell(tetromino);\n                globals_1.gameState.droppingWidth = globals_1.gameState.wellWidth / 2;\n                globals_1.gameState.droppingHeight = globals_1.gameState.wellHeight;\n                clear_lines_1.clearLines(globals_1.gameState.tetrisWell);\n                pickNewPiece();\n                globals_1.gameState.currentTetrominoGradient = choose_color_1.chooseColor();\n            }\n        }\n    }\n    // TODO: In the glorious future:\n    // function rateCheck(delta, rate, functionThatYouWant);\n    function update(delta) {\n        inputs_1.handleKeyInputs(delta);\n        updateDrop(delta);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV0cmlzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RldHJpcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUF3QztBQUN4Qyx1Q0FBb0M7QUFDcEMsNkNBQW1EO0FBQ25ELCtDQUF5QztBQUN6Qyw2Q0FBd0M7QUFDeEMscUNBQXlDO0FBQ3pDLGlEQUEyQztBQUMzQyxpQ0FBNEI7QUFFNUI7SUFDRSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRXRCLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO1NBQ3ZCLE9BQU8sQ0FBQyxXQUFJLENBQUM7U0FDYixNQUFNLENBQUMsR0FBRyxDQUFDO1NBQ1gsS0FBSyxFQUFFLENBQUM7SUFFWCxhQUNFLEdBQUcsRUFDSCxLQUFLO1FBRUwsSUFBSSxLQUFLLEVBQUU7WUFDVCxRQUFRLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDNUI7SUFDSCxDQUFDO0lBRUQ7UUFDRSw0Q0FBNEM7UUFDNUMsbUJBQVMsQ0FBQyxpQkFBaUIsR0FBRyxtQkFBUyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLHVCQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25GLENBQUM7SUFFRCxzQkFBc0IsU0FBUztRQUM3QixLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRTtZQUM1QyxLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRTtnQkFDaEQsSUFBSSxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFO29CQUMzQixTQUFTO2lCQUNWO2dCQUNELElBQUksS0FBSyxHQUFHLG1CQUFTLENBQUMsYUFBYSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzdDLElBQUksS0FBSyxHQUFHLG1CQUFTLENBQUMsY0FBYyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBRTlDLG1CQUFTLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLHFCQUFxQjthQUM5RDtTQUNGO0lBQ0gsQ0FBQztJQUVELG9CQUFvQixLQUFLO1FBQ3ZCLE1BQU0sU0FBUyxHQUFHLHVCQUFVLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLG1CQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUV0RixtQkFBUyxDQUFDLGFBQWEsSUFBSSxLQUFLLENBQUM7UUFDakMsSUFBSSxtQkFBUyxDQUFDLGFBQWEsR0FBRyxtQkFBUyxDQUFDLFlBQVksRUFBRTtZQUNwRCxNQUFNLFNBQVMsR0FBRyxrQ0FBcUIsQ0FBQztnQkFDdEMsT0FBTyxFQUFFLENBQUMsQ0FBQztnQkFDWCxTQUFTO2FBQ1YsQ0FBQyxDQUFDO1lBRUgsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDZCxtQkFBUyxDQUFDLGNBQWMsSUFBSSxDQUFDLENBQUM7Z0JBQzlCLG1CQUFTLENBQUMsYUFBYSxJQUFJLG1CQUFTLENBQUMsWUFBWSxDQUFDO2dCQUNsRCw0REFBNEQ7YUFDN0Q7aUJBQU07Z0JBQ0wsdUJBQXVCO2dCQUN2Qix3QkFBd0I7Z0JBRXhCLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFFeEIsbUJBQVMsQ0FBQyxhQUFhLEdBQUcsbUJBQVMsQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO2dCQUNsRCxtQkFBUyxDQUFDLGNBQWMsR0FBRyxtQkFBUyxDQUFDLFVBQVUsQ0FBQztnQkFDaEQsd0JBQVUsQ0FBQyxtQkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUNqQyxZQUFZLEVBQUUsQ0FBQztnQkFDZixtQkFBUyxDQUFDLHdCQUF3QixHQUFHLDBCQUFXLEVBQUUsQ0FBQzthQUNwRDtTQUNGO0lBQ0gsQ0FBQztJQUVELGdDQUFnQztJQUNoQyx3REFBd0Q7SUFFeEQsZ0JBQWdCLEtBQUs7UUFDbkIsd0JBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QixVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEIsQ0FBQztDQUdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgTWFpbkxvb3AgZnJvbSAnbWFpbmxvb3AuanMnO1xuaW1wb3J0IHtnYW1lU3RhdGV9IGZyb20gXCIuL2dsb2JhbHNcIjtcbmltcG9ydCB7Y29uc2lkZXJNb3ZpbmdUaGF0V2F5fSBmcm9tIFwiLi9jb2xsaXNpb25zXCI7XG5pbXBvcnQge2NsZWFyTGluZXN9IGZyb20gXCIuL2NsZWFyX2xpbmVzXCI7XG5pbXBvcnQge3RldHJvbWlub3N9IGZyb20gXCIuL3RldHJvbWlub3NcIjtcbmltcG9ydCB7aGFuZGxlS2V5SW5wdXRzfSBmcm9tIFwiLi9pbnB1dHNcIjtcbmltcG9ydCB7Y2hvb3NlQ29sb3J9IGZyb20gXCIuL2Nob29zZV9jb2xvclwiO1xuaW1wb3J0IHtkcmF3fSBmcm9tIFwiLi9kcmF3XCI7XG5cbntcbiAgY29uc29sZS5sb2coTWFpbkxvb3ApO1xuXG4gIE1haW5Mb29wLnNldFVwZGF0ZSh1cGRhdGUpXG4gICAgLnNldERyYXcoZHJhdylcbiAgICAuc2V0RW5kKGVuZClcbiAgICAuc3RhcnQoKTtcblxuICBmdW5jdGlvbiBlbmQoXG4gICAgZnBzLFxuICAgIHBhbmljLFxuICApIHtcbiAgICBpZiAocGFuaWMpIHtcbiAgICAgIE1haW5Mb29wLnJlc2V0RnJhbWVEZWx0YSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBpY2tOZXdQaWVjZSgpIHtcbiAgICAvLyAtMSBpcyB0byBhbGxvdyBmb3IgcmFuZ2UgaW4gMCBiYXNlZCBBcnJheVxuICAgIGdhbWVTdGF0ZS5kcm9wcGluZ1RldHJvbWlubyA9IGdhbWVTdGF0ZS5yYW5kb20uaW50ZWdlcigxLCB0ZXRyb21pbm9zLmxlbmd0aCkgLSAxO1xuICB9XG5cbiAgZnVuY3Rpb24gY29tbWl0VG9XZWxsKHRldHJvbWlubykge1xuICAgIGZvciAobGV0IHRIID0gMDsgdEggPCB0ZXRyb21pbm8ubGVuZ3RoOyArK3RIKSB7XG4gICAgICBmb3IgKGxldCB0VyA9IDA7IHRXIDwgdGV0cm9taW5vW3RIXS5sZW5ndGg7ICsrdFcpIHtcbiAgICAgICAgaWYgKHRldHJvbWlub1t0SF1bdFddID09PSAwKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHdlbGxXID0gZ2FtZVN0YXRlLmRyb3BwaW5nV2lkdGggKyB0VyArIDE7XG4gICAgICAgIGxldCB3ZWxsSCA9IGdhbWVTdGF0ZS5kcm9wcGluZ0hlaWdodCArIHRIICsgMTtcblxuICAgICAgICBnYW1lU3RhdGUudGV0cmlzV2VsbFt3ZWxsSF1bd2VsbFddID0gMTsgLy8gdGV0cm9taW5vW3RIXVt0V107XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlRHJvcChkZWx0YSkge1xuICAgIGNvbnN0IHRldHJvbWlubyA9IHRldHJvbWlub3NbZ2FtZVN0YXRlLmRyb3BwaW5nVGV0cm9taW5vXVtnYW1lU3RhdGUucGllY2VPcmllbnRhdGlvbl07XG5cbiAgICBnYW1lU3RhdGUuZHJvcHBpbmdEZWx0YSArPSBkZWx0YTtcbiAgICBpZiAoZ2FtZVN0YXRlLmRyb3BwaW5nRGVsdGEgPiBnYW1lU3RhdGUuZHJvcHBpbmdSYXRlKSB7XG4gICAgICBjb25zdCBjb2xsaWRpbmcgPSBjb25zaWRlck1vdmluZ1RoYXRXYXkoe1xuICAgICAgICBvZmZzZXRIOiAtMSxcbiAgICAgICAgdGV0cm9taW5vLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghY29sbGlkaW5nKSB7XG4gICAgICAgIGdhbWVTdGF0ZS5kcm9wcGluZ0hlaWdodCAtPSAxO1xuICAgICAgICBnYW1lU3RhdGUuZHJvcHBpbmdEZWx0YSAtPSBnYW1lU3RhdGUuZHJvcHBpbmdSYXRlO1xuICAgICAgICAvLyB0b2RvOiBhZGQgc29tZSBsYXRjaCB0aW1lIGJlZm9yZSBjb21taXR0aW5nIHRoZSB0aGUgd2VsbC5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHRvZG86IGNvcHkgaW50byB3ZWxsXG4gICAgICAgIC8vIHRvZG86IHNwYXduIG5ldyBwaWVjZVxuXG4gICAgICAgIGNvbW1pdFRvV2VsbCh0ZXRyb21pbm8pO1xuXG4gICAgICAgIGdhbWVTdGF0ZS5kcm9wcGluZ1dpZHRoID0gZ2FtZVN0YXRlLndlbGxXaWR0aCAvIDI7XG4gICAgICAgIGdhbWVTdGF0ZS5kcm9wcGluZ0hlaWdodCA9IGdhbWVTdGF0ZS53ZWxsSGVpZ2h0O1xuICAgICAgICBjbGVhckxpbmVzKGdhbWVTdGF0ZS50ZXRyaXNXZWxsKTtcbiAgICAgICAgcGlja05ld1BpZWNlKCk7XG4gICAgICAgIGdhbWVTdGF0ZS5jdXJyZW50VGV0cm9taW5vR3JhZGllbnQgPSBjaG9vc2VDb2xvcigpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFRPRE86IEluIHRoZSBnbG9yaW91cyBmdXR1cmU6XG4gIC8vIGZ1bmN0aW9uIHJhdGVDaGVjayhkZWx0YSwgcmF0ZSwgZnVuY3Rpb25UaGF0WW91V2FudCk7XG5cbiAgZnVuY3Rpb24gdXBkYXRlKGRlbHRhKSB7XG4gICAgaGFuZGxlS2V5SW5wdXRzKGRlbHRhKTtcbiAgICB1cGRhdGVEcm9wKGRlbHRhKTtcbiAgfVxuXG5cbn1cbiJdfQ==\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tetris.ts\n");

/***/ }),

/***/ "./src/tetrominos.ts":
/*!***************************!*\
  !*** ./src/tetrominos.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Tetromino\nexports.tetrominos = [\n    [\n        [\n            [0, 1, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 1],\n            [0, 1, 0, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 1, 0],\n            [0, 0, 1, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 0, 1, 0],\n            [1, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 0, 1, 0],\n            [0, 0, 1, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 1, 1],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 0, 0],\n            [0, 1, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [1, 1, 1, 0],\n            [0, 0, 1, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 0, 0, 0],\n            [0, 1, 0, 0],\n            [1, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [1, 1, 1, 0],\n            [0, 1, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 0, 0],\n            [1, 1, 0, 0],\n            [0, 1, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 0, 1, 0],\n            [0, 0, 1, 0],\n            [0, 0, 1, 0],\n            [0, 0, 1, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [1, 1, 1, 1],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 1, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [1, 1, 1, 1],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 1, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 0, 1, 1],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 1, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [1, 1, 0, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n    [\n        [\n            [0, 0, 1, 0],\n            [0, 1, 1, 0],\n            [0, 1, 0, 0],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 1, 1],\n            [0, 0, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [0, 0, 1, 0],\n            [0, 1, 1, 0],\n            [0, 1, 0, 0],\n        ],\n        [\n            [0, 0, 0, 0],\n            [1, 1, 0, 0],\n            [0, 1, 1, 0],\n            [0, 0, 0, 0],\n        ],\n    ],\n];\nfunction rotateCw(matrix) {\n    const w = matrix.length;\n    const h = matrix[0].length;\n    const result = [];\n    for (let hi = 0; hi < h; ++hi) {\n        const row = [];\n        result.push(row);\n        for (let wi = w - 1; wi >= 0; --wi) {\n            row.push(matrix[wi][hi]);\n        }\n    }\n    return result;\n}\nfunction rotateCcw(matrix) {\n    const w = matrix.length;\n    const h = matrix[0].length;\n    const result = [];\n    for (let hi = h - 1; hi >= 0; --hi) {\n        const row = [];\n        result.push(row);\n        for (let wi = 0; wi < w; ++wi) {\n            row.push(matrix[wi][hi]);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tetrominos.ts\n");

/***/ })

/******/ });